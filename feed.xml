<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jslee&#39;s blog</title>
  
  <subtitle>Develop, InfoSec &amp; Life</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://www.jslee.me/"/>
  <updated>2019-08-06T05:08:11.231Z</updated>
  <id>https://www.jslee.me/</id>
  
  <author>
    <name>Jaeseok Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Node.js 설치하기</title>
    <link href="https://www.jslee.me/2019/08/06/install-nodejs/"/>
    <id>https://www.jslee.me/2019/08/06/install-nodejs/</id>
    <published>2019-08-06T11:21:42.000Z</published>
    <updated>2019-08-06T05:08:11.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/06/install-nodejs/nodejs-logo.svg" width="250"><p><a href="https://github.com/nodesource/distributions/blob/master/README.md" target="_blank" rel="noopener">https://github.com/nodesource/distributions/blob/master/README.md</a></p><p>위 페이지를 참고하여 Node.js를 설치하는 공식적인 방법을 정리한다.</p><a id="more"></a><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>다음 명령어를 이용하여 각 환경에서 Node.js를 설치할 수 있다.</p><h3 id="Ubuntu-또는-Debian-기반"><a href="#Ubuntu-또는-Debian-기반" class="headerlink" title="Ubuntu 또는 Debian 기반"></a>Ubuntu 또는 Debian 기반</h3><h4 id="U-D-기반-Node-js-v12-x-설치"><a href="#U-D-기반-Node-js-v12-x-설치" class="headerlink" title="U/D 기반 Node.js v12.x 설치"></a>U/D 기반 Node.js v12.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using Debian, as root</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_12.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h4 id="U-D-기반-Node-js-v11-x-설치"><a href="#U-D-기반-Node-js-v11-x-설치" class="headerlink" title="U/D 기반 Node.js v11.x 설치"></a>U/D 기반 Node.js v11.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using Debian, as root</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_11.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h4 id="U-D-기반-Node-js-v10-x-설치"><a href="#U-D-기반-Node-js-v10-x-설치" class="headerlink" title="U/D 기반 Node.js v10.x 설치"></a>U/D 기반 Node.js v10.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using Debian, as root</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_10.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h3 id="Enterprise-Linux-기반-CentOS-RHEL-Fedora-등"><a href="#Enterprise-Linux-기반-CentOS-RHEL-Fedora-등" class="headerlink" title="Enterprise Linux 기반 (CentOS, RHEL, Fedora 등)"></a>Enterprise Linux 기반 (CentOS, RHEL, Fedora 등)</h3><h4 id="EL-기반-Node-js-v12-x-설치"><a href="#EL-기반-Node-js-v12-x-설치" class="headerlink" title="EL 기반 Node.js v12.x 설치"></a>EL 기반 Node.js v12.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_12.x | bash -</span><br></pre></td></tr></table></figure><h4 id="EL-기반-Node-js-v11-x-설치"><a href="#EL-기반-Node-js-v11-x-설치" class="headerlink" title="EL 기반 Node.js v11.x 설치"></a>EL 기반 Node.js v11.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_11.x | bash -</span><br></pre></td></tr></table></figure><h4 id="EL-기반-Node-js-v10-x-설치"><a href="#EL-기반-Node-js-v10-x-설치" class="headerlink" title="EL 기반 Node.js v10.x 설치"></a>EL 기반 Node.js v10.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_10.x | bash -</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/06/install-nodejs/nodejs-logo.svg&quot; width=&quot;250&quot;&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodesource/distributions/blob/master/README.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nodesource/distributions/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;위 페이지를 참고하여 Node.js를 설치하는 공식적인 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Node.js" scheme="https://www.jslee.me/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Docker를 이용하여 Zookeeper와 Kafka 실행하기</title>
    <link href="https://www.jslee.me/2019/08/05/run-kafka-with-docker/"/>
    <id>https://www.jslee.me/2019/08/05/run-kafka-with-docker/</id>
    <published>2019-08-05T11:31:52.000Z</published>
    <updated>2019-08-05T14:08:10.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/05/run-kafka-with-docker/kafka-logo.png" width="200"><p>Docker를 이용하여 Kafka와 Zookeeper 서비스를 구동하는 방법을 정리한다.</p><a id="more"></a><h3 id="버전"><a href="#버전" class="headerlink" title="버전"></a>버전</h3><p>2019년 07월 29일 시점에서 최신 버전인 Kafka 2.12-2.3.0, Zookeeper 3.5.5 버전을 기준으로 설명한다.</p><h2 id="Docker-Network-설정"><a href="#Docker-Network-설정" class="headerlink" title="Docker Network 설정"></a>Docker Network 설정</h2><p>다음 명령어를 이용하여 Kafka와 Zookeeper가 통신하기 위해 사용할 Docker Network를 생성한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker network create kafka</span><br></pre></td></tr></table></figure><h2 id="Zookeeper-서비스-구동"><a href="#Zookeeper-서비스-구동" class="headerlink" title="Zookeeper 서비스 구동"></a>Zookeeper 서비스 구동</h2><p><a href="https://hub.docker.com/_/zookeeper" target="_blank" rel="noopener">https://hub.docker.com/_/zookeeper</a></p><p>Zookeeper는 공식 Docker 이미지를 제공하고 있다.</p><p>다음 명령어를 통해 Docker를 이용하여 Zookeeper 서비스를 실행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=zookeeper --net=kafka -p 2181:2181 zookeeper</span><br></pre></td></tr></table></figure><h2 id="Kafka-서비스-구동"><a href="#Kafka-서비스-구동" class="headerlink" title="Kafka 서비스 구동"></a>Kafka 서비스 구동</h2><p><a href="https://hub.docker.com/r/wurstmeister/kafka" target="_blank" rel="noopener">https://hub.docker.com/r/wurstmeister/kafka</a></p><p>Kafka는 wurstmeister라는 사람이 만든 이미지를 이용하여 실행시킬 수 있다.</p><p>다음 명령어를 통해 Docker를 이용하여 Kafka 서비스를 실행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name kafka --net=kafka -p 9092:9092 -e KAFKA_ADVERTISED_LISTENERS=<span class="string">"PLAINTEXT://localhost:9092"</span> -e KAFKA_LISTENERS=<span class="string">"PLAINTEXT://0.0.0.0:9092"</span> -e KAFKA_ADVERTISED_HOST_NAME=<span class="string">"127.0.0.1"</span> -e KAFKA_ADVERTISED_PORT=<span class="string">"9092"</span> -e KAFKA_ZOOKEEPER_CONNECT=<span class="string">"zookeeper:2181"</span> -e KAFKA_CREATE_TOPICS=<span class="string">"javainuse-topic:1:1"</span> wurstmeister/kafka</span><br></pre></td></tr></table></figure><h2 id="Kafka-서비스-테스트"><a href="#Kafka-서비스-테스트" class="headerlink" title="Kafka 서비스 테스트"></a>Kafka 서비스 테스트</h2><h2 id="확인-사항"><a href="#확인-사항" class="headerlink" title="확인 사항"></a>확인 사항</h2><h3 id="Java-설치-확인"><a href="#Java-설치-확인" class="headerlink" title="Java 설치 확인"></a>Java 설치 확인</h3><p>Java가 설치되어 있지 않으면 <a href="https://www.notion.so/93c3d7fb-8c5b-472f-af4f-8a7c67d51de1" target="_blank" rel="noopener">CentOS에 JDK 설치</a> 문서를 참고하여 Java를 설치한다.</p><h3 id="바이너리-다운로드"><a href="#바이너리-다운로드" class="headerlink" title="바이너리 다운로드"></a>바이너리 다운로드</h3><p><a href="https://kafka.apache.org/downloads" target="_blank" rel="noopener">https://kafka.apache.org/downloads</a></p><p>위 사이트에서 Kafka Docker 이미지의 버전과 동일한 버전의 바이너리 파일 주소를 복사한다.</p><p>본 문서를 작성하는 시점에서는 다음과 같았다.</p><p><a href="http://apache.mirror.cdnetworks.com/kafka/2.3.0/kafka_2.12-2.3.0.tgz" target="_blank" rel="noopener">http://apache.mirror.cdnetworks.com/kafka/2.3.0/kafka_2.12-2.3.0.tgz</a></p><p>다음 명령어를 통해 Kafka 바이너리 파일을 다운로드한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://apache.mirror.cdnetworks.com/kafka/2.3.0/kafka_2.12-2.3.0.tgz</span><br></pre></td></tr></table></figure><p>다음 명령어를 통해 압축을 해제한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf kafka_2.12-2.3.0.tgz</span><br></pre></td></tr></table></figure><p>다음 명령어를 통해 안으로 들어간다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> kafka_2.12-2.3.0</span><br></pre></td></tr></table></figure><h3 id="Topic-생성-테스트"><a href="#Topic-생성-테스트" class="headerlink" title="Topic 생성 테스트"></a>Topic 생성 테스트</h3><p>다음 명령어를 통해 Kafka Topic을 생성할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic <span class="built_in">test</span> --partitions 1 --replication-factor 1</span><br></pre></td></tr></table></figure><h3 id="Topic-확인-테스트"><a href="#Topic-확인-테스트" class="headerlink" title="Topic 확인 테스트"></a>Topic 확인 테스트</h3><p>다음 명령어를 통해 Kafka Topic을 확인할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe</span><br></pre></td></tr></table></figure><h3 id="Consumer-테스트"><a href="#Consumer-테스트" class="headerlink" title="Consumer 테스트"></a>Consumer 테스트</h3><p>다음 명령어를 통해 Kafka Console Consumer를 테스트할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --from-beginning --bootstrap-server localhost:9092 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="Producer-테스트"><a href="#Producer-테스트" class="headerlink" title="Producer 테스트"></a>Producer 테스트</h3><p>다음 명령어를 통해 Kafka Console Consumer를 테스트할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="Topic-삭제-테스트"><a href="#Topic-삭제-테스트" class="headerlink" title="Topic 삭제 테스트"></a>Topic 삭제 테스트</h3><p>다음 명령어를 통해 Kafka Topic을 삭제할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --delete --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/05/run-kafka-with-docker/kafka-logo.png&quot; width=&quot;200&quot;&gt;

&lt;p&gt;Docker를 이용하여 Kafka와 Zookeeper 서비스를 구동하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Docker" scheme="https://www.jslee.me/tags/Docker/"/>
    
      <category term="Zookeeper" scheme="https://www.jslee.me/tags/Zookeeper/"/>
    
      <category term="Kafka" scheme="https://www.jslee.me/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>CentOS에 JDK 설치하기</title>
    <link href="https://www.jslee.me/2019/08/04/install-jdk-on-centos/"/>
    <id>https://www.jslee.me/2019/08/04/install-jdk-on-centos/</id>
    <published>2019-08-04T04:33:35.000Z</published>
    <updated>2019-08-04T06:16:12.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/04/install-jdk-on-centos/java-jdk-logo.jpg" width="300"><p>CentOS 환경에 Java를 설치하는 방법을 정리한다.</p><a id="more"></a><h2 id="OpenJDK"><a href="#OpenJDK" class="headerlink" title="OpenJDK"></a>OpenJDK</h2><h3 id="OpenJDK-버전"><a href="#OpenJDK-버전" class="headerlink" title="OpenJDK 버전"></a>OpenJDK 버전</h3><p>2019년 07월 29일 기준으로 최신 버전인 build 12+32를 이용하여 설명한다.</p><h3 id="OpenJDK-다운로드"><a href="#OpenJDK-다운로드" class="headerlink" title="OpenJDK 다운로드"></a>OpenJDK 다운로드</h3><p><a href="http://jdk.java.net/" target="_blank" rel="noopener">http://jdk.java.net</a></p><p>위 사이트에서 JDK 최신 버전의 링크를 복사한다.</p><p>본 문서 작성일 기준으로 다음과 같았다.</p><p><a href="https://download.java.net/openjdk/jdk12/ri/openjdk-12+32_linux-x64_bin.tar.gz" target="_blank" rel="noopener">https://download.java.net/openjdk/jdk12/ri/openjdk-12+32_linux-x64_bin.tar.gz</a></p><p>다음 명령어로 해당 JDK 압축 파일을 다운로드한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.java.net/openjdk/jdk12/ri/openjdk-12+32_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><h3 id="OpenJDK-설치"><a href="#OpenJDK-설치" class="headerlink" title="OpenJDK 설치"></a>OpenJDK 설치</h3><p>다음 명령어로 다운로드 한 압축 파일의 압축을 해제한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf openjdk-12+32_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><p>다음 명령어로 JDK 디렉토리를 이동하고 심볼릭 링크를 생성한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv jdk-12 /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">ln -sf jdk-12 java</span><br></pre></td></tr></table></figure><p>사용 중인 쉘의 rc 파일의 가장 아래에 다음 구문을 추가한다. (.bashrc, .zshrc 등)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/java/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br></pre></td></tr></table></figure><p>다음 명령어로 사용 중인 쉘의 rc 파일을 적용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>다음 명령어로 Java와 컴파일러를 정상적으로 사용할 수 있는지 확인한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java --version</span><br><span class="line">javac --version</span><br></pre></td></tr></table></figure><h2 id="Oracle-JDK"><a href="#Oracle-JDK" class="headerlink" title="Oracle JDK"></a>Oracle JDK</h2><p>2018년 7월부터 Oracle JDK의 Java SE Subscription 라이센스 정책이 시행됨에 따라 상업용으로 이용하려면 라이센스 구독을 해야 한다.</p><p>다만 Oracle JDK 1.8.202 버전 이하는 여전히 프로그램의 동작을 위한 목적에 한하여 무료로 사용 가능한 Binary Code License(BCL) 정책을 따른다.</p><h3 id="Oracle-JDK-버전"><a href="#Oracle-JDK-버전" class="headerlink" title="Oracle JDK 버전"></a>Oracle JDK 버전</h3><p>개인용으로 사용할 것인지 상업용으로 사용할 것인지 등에 따라서 원하는 버전이 달라질 수 있다.</p><p>필자는 개인적으로 사용할 예정이므로 2019년 08월 04일 기준으로 최신 버전인 12.0.2를 기준으로 설명한다.</p><h3 id="Oracle-JDK-다운로드"><a href="#Oracle-JDK-다운로드" class="headerlink" title="Oracle JDK 다운로드"></a>Oracle JDK 다운로드</h3><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">오라클 Java SE 다운로드 페이지</a>에 접속하여 원하는 버전을 다운로드한다.</p><p>오라클 웹 페이지에서는 접속하는 클라이언트가 쿠키 정책에 동의해야만 이후 작업을 처리해 주기 때문에 wget으로 간단하게 다운로드 하기 어렵다.</p><p>그래서 그냥 로컬 컴퓨터로 다운로드 하고 설치하려는 서버에 직접 옮기는 게 편하다.</p><h3 id="Oracle-JDK-설치"><a href="#Oracle-JDK-설치" class="headerlink" title="Oracle JDK 설치"></a>Oracle JDK 설치</h3><p>다음 명령어로 다운로드 한 압축 파일의 압축을 해제한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf jdk-12.0.2_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><p>다음 명령어로 JDK 디렉토리를 이동하고 심볼릭 링크를 생성한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv jdk-12.0.2 /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">ln -sf jdk-12.0.2 java</span><br></pre></td></tr></table></figure><p>사용 중인 쉘의 rc 파일의 가장 아래에 다음 구문을 추가한다. (.bashrc, .zshrc 등)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/java/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br></pre></td></tr></table></figure><p>다음 명령어로 사용 중인 쉘의 rc 파일을 적용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>다음 명령어로 Java와 컴파일러를 정상적으로 사용할 수 있는지 확인한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java --version</span><br><span class="line">javac --version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/04/install-jdk-on-centos/java-jdk-logo.jpg&quot; width=&quot;300&quot;&gt;

&lt;p&gt;CentOS 환경에 Java를 설치하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="CentOS" scheme="https://www.jslee.me/tags/CentOS/"/>
    
      <category term="Java" scheme="https://www.jslee.me/tags/Java/"/>
    
      <category term="JDK" scheme="https://www.jslee.me/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>CentOS에 Docker 설치하기</title>
    <link href="https://www.jslee.me/2019/08/03/install-docker-on-centos/"/>
    <id>https://www.jslee.me/2019/08/03/install-docker-on-centos/</id>
    <published>2019-08-03T04:26:42.000Z</published>
    <updated>2019-08-04T06:16:12.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/03/install-docker-on-centos/docker-logo.png" width="250"><p>CentOS에 Docker를 설치하는 방법을 정리한다.</p><a id="more"></a><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><h3 id="Update-packages"><a href="#Update-packages" class="headerlink" title="Update packages"></a>Update packages</h3><p>다음 명령어로 yum으로 설치된 모든 패키지의 업데이트를 진행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update -y</span><br></pre></td></tr></table></figure><h3 id="Docker-설치"><a href="#Docker-설치" class="headerlink" title="Docker 설치"></a>Docker 설치</h3><p>다음 명령어로 yum을 이용하여 Docker를 설치한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y docker</span><br></pre></td></tr></table></figure><p>다음 명령어로 Docker 서비스를 시작한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>다음 명령어로 부팅 시 Docker 서비스를 자동으로 시작하도록 설정한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="추가로-확인할-사항"><a href="#추가로-확인할-사항" class="headerlink" title="추가로 확인할 사항"></a>추가로 확인할 사항</h2><h3 id="Insecure-Registry-등록"><a href="#Insecure-Registry-등록" class="headerlink" title="Insecure Registry 등록"></a>Insecure Registry 등록</h3><p>다음과 같이 Docker daemon 설정 파일을 수정하여 (없으면 생성) 다음과 같은 구문을 추가한다.</p><figure class="highlight json"><figcaption><span>/etc/docker/daemon.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"insecure-registries"</span>: [<span class="string">"URL:PORT"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그 후 Docker 서비스를 재시작하면 해당 URL에 대하여 Insecure registry 오류가 발생하지 않는다.</p><p>하지만 이 설정은 서버와 통신할 때 적절한 인증서 검증을 사용하지 않게 만들기 때문에 주의가 필요하다.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/03/install-docker-on-centos/docker-logo.png&quot; width=&quot;250&quot;&gt;

&lt;p&gt;CentOS에 Docker를 설치하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Docker" scheme="https://www.jslee.me/tags/Docker/"/>
    
      <category term="CentOS" scheme="https://www.jslee.me/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 설치하기</title>
    <link href="https://www.jslee.me/2019/08/02/install-centos/"/>
    <id>https://www.jslee.me/2019/08/02/install-centos/</id>
    <published>2019-08-01T19:43:35.000Z</published>
    <updated>2019-08-04T05:15:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/02/install-centos/centos-logo.png" width="200"><p>운영체제 CentOS를 설치하는 방법을 정리한다.</p><a id="more"></a><h3 id="버전"><a href="#버전" class="headerlink" title="버전"></a>버전</h3><p>2019년 07월 29일 기준으로 최신 버전인 CentOS 7 1810 버전을 이용하여 설명한다.</p><h2 id="CentOS-다운로드"><a href="#CentOS-다운로드" class="headerlink" title="CentOS 다운로드"></a>CentOS 다운로드</h2><p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">https://www.centos.org/download/</a></p><p>위 경로에서 최신 버전의 CentOS DVD ISO 파일을 다운로드한다.</p><h2 id="CentOS-설치-환경-구성"><a href="#CentOS-설치-환경-구성" class="headerlink" title="CentOS 설치 환경 구성"></a>CentOS 설치 환경 구성</h2><p>다음 중 하나의 방식으로 CentOS 설치 환경을 구성한다.</p><ul><li>로컬 컴퓨터에 VMware 등의 가상화 도구를 이용하여 가상 머신 생성</li><li>직접 CentOS를 설치할 컴퓨터 준비<ul><li>Rufus 등의 도구를 이용하여 CentOS 설치 USB 생성</li></ul></li></ul><h2 id="CentOS-설치"><a href="#CentOS-설치" class="headerlink" title="CentOS 설치"></a>CentOS 설치</h2><p>설치 이미지를 실행하여 가이드에 따라 한국어를 선택하여 설치를 진행한다.</p><p>다음과 같이 설정하고 설치 시작 버튼을 클릭한다.</p><ul><li>설치 대상<ul><li>자동 파티션 설정 선택</li></ul></li><li>네트워크 및 호스트명<ul><li>유선으로 … 연결되었습니다</li></ul></li><li>그 외 기본값</li></ul><p>설치되는 동안 루트 계정의 암호를 설정하고 관리자 계정을 생성한다.</p><p>설치가 완료될 때까지 대기한 후 안내에 따라 기기를 재시작한다.</p><p>그러면 CentOS 설치가 완료된다.</p><h2 id="추가로-확인할-사항"><a href="#추가로-확인할-사항" class="headerlink" title="추가로 확인할 사항"></a>추가로 확인할 사항</h2><h3 id="방화벽으로-인한-문제"><a href="#방화벽으로-인한-문제" class="headerlink" title="방화벽으로 인한 문제"></a>방화벽으로 인한 문제</h3><p>CentOS를 설치하면 기본적으로 방화벽 소프트웨어가 실행되고 있다.</p><p>이로 인하여 사용자 설정으로 개방한 포트에 대하여 외부 접근이 불가능할 수 있다.</p><p>이 때는 다음과 같이 방화벽에 원하는 서비스나 포트를 등록하여 문제를 해결할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --add-service=http</span><br><span class="line">sudo firewall-cmd --permanent --add-port=8080/tcp</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line">sudo firewall-cmd --permanent --list-all</span><br></pre></td></tr></table></figure><h3 id="기본-소프트웨어-설치"><a href="#기본-소프트웨어-설치" class="headerlink" title="기본 소프트웨어 설치"></a>기본 소프트웨어 설치</h3><p>CentOS를 최소 설치를 선택하여 설치하면 설치 속도는 빨라지지만 시스템 관리 및 서비스 구동에 필요한 기본적인 소프트웨어도 설치되어 있지 않은 상태가 된다.</p><p>다음 목록을 참고하여 기본 소프트웨어 설치를 위한 패키지를 설치할 수 있다.</p><ul><li>ifconfig<ul><li>net-tools</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/02/install-centos/centos-logo.png&quot; width=&quot;200&quot;&gt;

&lt;p&gt;운영체제 CentOS를 설치하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="CentOS" scheme="https://www.jslee.me/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>블로그 시작!</title>
    <link href="https://www.jslee.me/2019/08/01/start-blog/"/>
    <id>https://www.jslee.me/2019/08/01/start-blog/</id>
    <published>2019-08-01T14:37:51.000Z</published>
    <updated>2019-08-01T15:57:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="블로그를-또-다시-만들다"><a href="#블로그를-또-다시-만들다" class="headerlink" title="블로그를 또 다시 만들다"></a>블로그를 또 다시 만들다</h2><blockquote><p>항상 만들고 방치해서 잊혀진 나의 블로그들<br>이번에는 진짜 잘 해보자 ㅜㅜ</p></blockquote><p>블로그를 만들었다.</p><p>잠자는 네이버 블로그와 NAS에서 죽은 워드프레스와<br>“이젠 정말 제대로 해보자!”며 만든 티스토리 블로그를 뒤로 하고…</p><a id="more"></a><p>사실 Notion을 알기 전에는 정보를 거의 오프라인에서만 기록했고<br>얼마 안 됐지만 그 후에는 Notion에 정리하고 있었기 때문에<br>블로그를 단순히 기록하는 곳이라고 생각하던 나는 그동안 블로그의 필요성을 전혀 느끼지 못했다.</p><p>그런데 최근 GitHub에 관심이 생겨서 이것저것 찾아보던 중에<br>오래전에 흘려들었던 “GitHub Pages를 이용한 블로그 구축”에 대해 자세히 알게 되었다.</p><p><strong>블로그 활동을 하는 것이 모두 GitHub에 커밋으로 남는다니..!</strong><br>1일 1포스트와 1일 1커밋을 동시에?!?! 라는 생각으로 블로그 만들기에 바로 착수했다.</p><h3 id="Jekyll을-이용한-블로그-구축-시도"><a href="#Jekyll을-이용한-블로그-구축-시도" class="headerlink" title="Jekyll을 이용한 블로그 구축 시도"></a>Jekyll을 이용한 블로그 구축 시도</h3><p>처음에는 구글에 “GitHub 블로그”라고 검색해서 뜨는<br><a href="https://dreamgonfly.github.io/2018/01/27/jekyll-remote-theme.html" target="_blank" rel="noopener">쉽고 빠르게 수준 급의 GitHub 블로그 만들기</a> 같은 글을 보고<br>Jekyll과 minimal-mistakes 테마를 이용해서 블로그를 구성했다.</p><p>근데 그 날 밤에 게임을 하다가 친구에게 조언을 받았다.</p><blockquote><p>친구: 아직도 Jekyll로 블로그 만드는 흑우가 있다?<br>나: GitHub 블로그는 다 Jekyll로 만드는 거 아니여?<br>친구: ;; 구글에 Hexo 검색 ㄱ</p></blockquote><p>Jekyll은 Ruby 기반인데 반해 Hexo는 Node.js 기반이었다.<br>나는 Ruby는 하나도 모르지만 Node.js는 조금 해봤기 때문에<br>그걸 알고있는 친구의 조언을 감사히 받아들여 Hexo로 다시 블로그를 구축하기 시작했다.</p><h3 id="Hexo를-이용한-블로그-구축"><a href="#Hexo를-이용한-블로그-구축" class="headerlink" title="Hexo를 이용한 블로그 구축"></a>Hexo를 이용한 블로그 구축</h3><p><a href="https://hexo.io/ko/" target="_blank" rel="noopener">Hexo 공식 사이트</a>와 Hexo로 만들어진 믿음직한 블로그의 <a href="https://marv-0.github.io/2018/05/02/Hexo%20+%20Github%20%EB%B8%94%EB%A1%9C%EA%B7%B8%20%EA%B5%AC%EC%B6%95/" target="_blank" rel="noopener">Hexo + Github 블로그 구축</a> 글을 참고해서<br>기본적인 틀과 Jenkins를 이용하여 자동으로 Deploy 하는 구조는 잘 만들었다.</p><p>그런데 진짜 작업은 따로 있었으니… 바로 <strong>테마 적용 및 설정</strong>이었다.</p><h4 id="Hexo에-NexT-테마-입히기"><a href="#Hexo에-NexT-테마-입히기" class="headerlink" title="Hexo에 NexT 테마 입히기"></a>Hexo에 NexT 테마 입히기</h4><p><a href="https://theme-next.org/" target="_blank" rel="noopener">NexT 테마 공식 사이트</a>를 참고하여 NexT 테마를 설치하고 설정하였다.<br>여기서는 한 줄로 정리할 수 있지만 이 작업에 거의 8시간은 쓴 것 같다.</p><p>그래도 Disqus를 이용한 댓글 기능, Algolia를 이용한 검색 기능 등<br>사실상 Hexo와 NexT 테마에서 기본적으로 지원하는 기능들은 거의 다 쓸 수 있게 된 것 같아서 기분이 좋다.<br>이와 관련한 자세한 내용은 Hexo + NexT / Jenkin / GitHub Pages를 이용한 블로그 구축을 주제로<br>따로 정리를 해서 포스팅 할 예정이다.</p><h2 id="앞으로-할-일"><a href="#앞으로-할-일" class="headerlink" title="앞으로 할 일"></a>앞으로 할 일</h2><ul><li>마크다운 문법 다시 학습</li><li>1일 1포스트 (1일 1커밋) 이상!<ul><li>이전에 Notion 등에 정리했던 기록 중 공유할 만한 내용</li><li>알고 있거나 새로 알게 된 정보 중 공유할 만한 내용</li></ul></li><li>블로그 개인화<ul><li>테마 부분 수정</li><li>기능, 페이지 추가, 수정 등</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;블로그를-또-다시-만들다&quot;&gt;&lt;a href=&quot;#블로그를-또-다시-만들다&quot; class=&quot;headerlink&quot; title=&quot;블로그를 또 다시 만들다&quot;&gt;&lt;/a&gt;블로그를 또 다시 만들다&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;항상 만들고 방치해서 잊혀진 나의 블로그들&lt;br&gt;이번에는 진짜 잘 해보자 ㅜㅜ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;블로그를 만들었다.&lt;/p&gt;
&lt;p&gt;잠자는 네이버 블로그와 NAS에서 죽은 워드프레스와&lt;br&gt;“이젠 정말 제대로 해보자!”며 만든 티스토리 블로그를 뒤로 하고…&lt;/p&gt;
    
    </summary>
    
      <category term="잡담" scheme="https://www.jslee.me/categories/%EC%9E%A1%EB%8B%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.jslee.me/2019/08/01/hello-world/"/>
    <id>https://www.jslee.me/2019/08/01/hello-world/</id>
    <published>2019-07-31T15:00:00.000Z</published>
    <updated>2019-08-01T07:37:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo로-블로그-만들었다"><a href="#Hexo로-블로그-만들었다" class="headerlink" title="Hexo로 블로그 만들었다"></a>Hexo로 블로그 만들었다</h2><p>Hexo에서 자동으로 만들어 준 글이다.</p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo로-블로그-만들었다&quot;&gt;&lt;a href=&quot;#Hexo로-블로그-만들었다&quot; class=&quot;headerlink&quot; title=&quot;Hexo로 블로그 만들었다&quot;&gt;&lt;/a&gt;Hexo로 블로그 만들었다&lt;/h2&gt;&lt;p&gt;Hexo에서 자동으로 만들어 준 글이다.&lt;/p&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="잡담" scheme="https://www.jslee.me/categories/%EC%9E%A1%EB%8B%B4/"/>
    
    
  </entry>
  
</feed>
